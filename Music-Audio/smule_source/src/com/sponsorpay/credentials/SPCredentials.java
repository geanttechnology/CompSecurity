// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package com.sponsorpay.credentials;

import android.content.Context;
import com.sponsorpay.utils.StringUtils;
import com.sponsorpay.utils.UserId;
import java.util.UUID;

public class SPCredentials
{

    private final String mAppId;
    private final String mCredentialsToken;
    private String mSecurityToken;
    private final String mUserId;

    public SPCredentials(String s, String s1, String s2, Context context)
    {
        if (StringUtils.nullOrEmpty(s))
        {
            throw new IllegalArgumentException("AppID cannot be null!");
        }
        mSecurityToken = StringUtils.trim(s2);
        mAppId = StringUtils.trim(s);
        mCredentialsToken = getCredentialsToken(mAppId, s1);
        if (StringUtils.nullOrEmpty(s1))
        {
            mUserId = UserId.getAutoGenerated(context);
            return;
        } else
        {
            mUserId = s1;
            return;
        }
    }

    public static String getCredentialsToken(String s, String s1)
    {
        if (StringUtils.nullOrEmpty(s))
        {
            throw new IllegalArgumentException("AppID cannot be null!");
        }
        String s2 = s1;
        if (StringUtils.nullOrEmpty(s1))
        {
            s2 = "";
        }
        return UUID.nameUUIDFromBytes((new StringBuilder(String.valueOf(s))).append("-").append(s2).toString().getBytes()).toString();
    }

    public String getAppId()
    {
        return mAppId;
    }

    public String getCredentialsToken()
    {
        return mCredentialsToken;
    }

    public String getSecurityToken()
    {
        return mSecurityToken;
    }

    public String getUserId()
    {
        return mUserId;
    }

    public void setSecurityToken(String s)
    {
        mSecurityToken = s;
    }

    public String toString()
    {
        String s2 = mCredentialsToken;
        String s3 = mAppId;
        String s;
        String s1;
        if (StringUtils.notNullNorEmpty(mUserId))
        {
            s = mUserId;
        } else
        {
            s = "N/A";
        }
        if (StringUtils.notNullNorEmpty(mSecurityToken))
        {
            s1 = mSecurityToken;
        } else
        {
            s1 = "N/A";
        }
        return String.format("Credentials token - %s\nAppId - %s\nUserId - %s\nSecurityToken - %s", new Object[] {
            s2, s3, s, s1
        });
    }
}
