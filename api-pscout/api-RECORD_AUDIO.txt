Permission:android.permission.RECORD_AUDIO
440 Callers:
<android.speech.RecognitionService: boolean checkPermissions (android.speech.IRecognitionListener)> (1)
<android.speech.RecognitionService: boolean access$700 (android.speech.RecognitionService,android.speech.IRecognitionListener)> (3)
<android.speech.RecognitionService$RecognitionServiceBinder: void cancel (android.speech.IRecognitionListener)> (2)
<android.speech.RecognitionService$RecognitionServiceBinder: void startListening (android.content.Intent,android.speech.IRecognitionListener)> (2)
<android.speech.RecognitionService$RecognitionServiceBinder: void stopListening (android.speech.IRecognitionListener)> (2)
<android.speech.IRecognitionService$Stub$Proxy: void cancel (android.speech.IRecognitionListener)> ()
<android.speech.IRecognitionService$Stub: void cancel (android.speech.IRecognitionListener)> (2)
<android.speech.IRecognitionService$Stub$Proxy: void startListening (android.content.Intent,android.speech.IRecognitionListener)> ()
<android.speech.IRecognitionService$Stub: void startListening (android.content.Intent,android.speech.IRecognitionListener)> (2)
<android.speech.IRecognitionService$Stub$Proxy: void stopListening (android.speech.IRecognitionListener)> ()
<android.speech.IRecognitionService$Stub: void stopListening (android.speech.IRecognitionListener)> (2)
<android.speech.IRecognitionService$Stub: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<android.speech.IRecognitionService: void cancel (android.speech.IRecognitionListener)> (1)
<android.speech.IRecognitionService: void startListening (android.content.Intent,android.speech.IRecognitionListener)> (1)
<android.speech.IRecognitionService: void stopListening (android.speech.IRecognitionListener)> (1)
<android.speech.RecognitionService$RecognitionServiceBinder: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<android.speech.SpeechRecognizer: void handleCancelMessage ()> (1)
<android.speech.SpeechRecognizer: void handleStartListening (android.content.Intent)> (1)
<android.speech.SpeechRecognizer: void handleStopMessage ()> (1)
<android.speech.SpeechRecognizer: void access$200 (android.speech.SpeechRecognizer)> (2)
<android.speech.SpeechRecognizer: void access$000 (android.speech.SpeechRecognizer,android.content.Intent)> (2)
<android.speech.SpeechRecognizer: void access$100 (android.speech.SpeechRecognizer)> (2)
<android.speech.SpeechRecognizer: void putMessage (android.os.Message)> (4)
<android.speech.SpeechRecognizer: void cancel ()> ()
<android.speech.SpeechRecognizer: void setRecognitionListener (android.speech.RecognitionListener)> ()
<android.speech.SpeechRecognizer: void startListening (android.content.Intent)> ()
<android.speech.SpeechRecognizer: void stopListening ()> ()
<android.media.AudioRecord: void <init> (int,int,int,int,int)> ()
<android.media.MediaRecorder: void setAudioSource (int)> (3)
<android.filterpacks.videosink.MediaEncoderFilter: void updateMediaRecorderParams ()> (1)
<com.android.camera.VideoCamera: void initializeRecorder ()> (1)
<com.android.soundrecorder.Recorder: void startRecording (int,java.lang.String,android.content.Context)> (1)
<android.filterpacks.videosink.MediaEncoderFilter: void startRecording (android.filterfw.core.FilterContext)> (2)
<com.android.camera.VideoCamera: void startVideoRecording ()> (1)
<com.android.soundrecorder.SoundRecorder: void onClick (android.view.View)> (1)
<android.filterpacks.videosink.MediaEncoderFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosink.MediaEncoderFilter: void process (android.filterfw.core.FilterContext)> (1)
<com.android.camera.VideoCamera: void onShutterButtonClick ()> (1)
<android.filterfw.core.Filter: void open (android.filterfw.core.FilterContext)> (60)
<android.filterfw.core.Filter: void process (android.filterfw.core.FilterContext)> (1)
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick ()> (1)
<android.filterfw.core.Filter: void performOpen (android.filterfw.core.FilterContext)> (69)
<android.filterpacks.base.CallbackFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameBranch: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameFetch: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameStore: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureTarget: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.InputStreamSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.NullFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.ObjectSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.OutputStreamTarget: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.RetargetFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.AlphaBlendFilter: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.AutoFixFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapOverlayFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlackWhiteFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlendFilter: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.BrightnessFilter: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ColorTemperatureFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ContrastFilter: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.CropFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CropRectFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CrossProcessFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DocumentaryFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawOverlayFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawRectFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DuotoneFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FillLightFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FisheyeFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FixedRotationFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FlipFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.GrainFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageCombineFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageEncoder: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageSlicer: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageStitcher: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.Invert: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.LomoishFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.NegativeFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.PosterizeFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RedEyeFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ResizeFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RotateFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SaturateFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SepiaFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SharpenFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SimpleImageFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.StraightenFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.TintFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToGrayFilter: void open (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ToPackedGrayFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBAFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.VignetteFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringLogger: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringSource: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.ToUpperCase: void open (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videoproc.BackDropperFilter: void open (android.filterfw.core.FilterContext)> (1)
<android.filterfw.core.Filter: void performProcess (android.filterfw.core.FilterContext)> (70)
<com.android.camera.ShutterButton: boolean performClick ()> (3)
<android.filterpacks.base.CallbackFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameBranch: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameFetch: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameStore: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureTarget: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.InputStreamSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.NullFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.ObjectSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.OutputStreamTarget: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.RetargetFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.AlphaBlendFilter: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.AutoFixFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapOverlayFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlackWhiteFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlendFilter: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.BrightnessFilter: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ColorTemperatureFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ContrastFilter: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.CropFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CropRectFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CrossProcessFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DocumentaryFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawOverlayFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawRectFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DuotoneFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FillLightFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FisheyeFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FixedRotationFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FlipFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.GrainFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageCombineFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageEncoder: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageSlicer: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageStitcher: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.Invert: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.LomoishFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.NegativeFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.PosterizeFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RedEyeFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ResizeFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RotateFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SaturateFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SepiaFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SharpenFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SimpleImageFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.StraightenFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.TintFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToGrayFilter: void performOpen (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ToPackedGrayFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBAFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.VignetteFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.numeric.SinWaveFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.performance.ThroughputFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringLogger: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.ToUpperCase: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.ui.SurfaceRenderFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.ui.SurfaceTargetFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videoproc.BackDropperFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosink.MediaEncoderFilter: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.CameraSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.MediaSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.SurfaceTextureSource: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.SurfaceTextureTarget: void performOpen (android.filterfw.core.FilterContext)> (1)
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute (android.filterfw.core.KeyValueMap)> (1)
<android.filterfw.core.SyncRunner: void processFilterNode (android.filterfw.core.Filter)> (1)
<android.filterpacks.base.CallbackFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameBranch: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameFetch: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.FrameStore: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.GLTextureTarget: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.InputStreamSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.NullFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.ObjectSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.OutputStreamTarget: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.base.RetargetFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.AlphaBlendFilter: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.AutoFixFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapOverlayFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BitmapSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlackWhiteFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.BlendFilter: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.BrightnessFilter: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ColorTemperatureFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ContrastFilter: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.CropFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CropRectFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.CrossProcessFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DocumentaryFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawOverlayFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DrawRectFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.DuotoneFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FillLightFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FisheyeFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FixedRotationFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.FlipFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.GrainFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageCombineFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageEncoder: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageSlicer: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ImageStitcher: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.Invert: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.LomoishFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.NegativeFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.PosterizeFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RedEyeFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ResizeFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.RotateFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SaturateFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SepiaFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SharpenFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.SimpleImageFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.StraightenFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.TintFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToGrayFilter: void performProcess (android.filterfw.core.FilterContext)> (2)
<android.filterpacks.imageproc.ToPackedGrayFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBAFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.ToRGBFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.imageproc.VignetteFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.numeric.SinWaveFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.performance.ThroughputFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringLogger: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.StringSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.text.ToUpperCase: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.ui.SurfaceRenderFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.ui.SurfaceTargetFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videoproc.BackDropperFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosink.MediaEncoderFilter: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.CameraSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.MediaSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.SurfaceTextureSource: void performProcess (android.filterfw.core.FilterContext)> (1)
<android.filterpacks.videosrc.SurfaceTextureTarget: void performProcess (android.filterfw.core.FilterContext)> (1)
<com.android.camera.VideoCamera: boolean onKeyDown (int,android.view.KeyEvent)> (3)
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList (java.lang.Object[])> (2)
<android.filterfw.core.SyncRunner: boolean performStep ()> (3)
<android.media.effect.SingleFilterEffect: void apply (int,int,int,int)> (25)
<android.media.effect.SizeChangeEffect: void apply (int,int,int,int)> (4)
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner$RunnerResult doInBackground (android.filterfw.core.SyncRunner[])> (1)
<android.filterfw.core.SyncRunner: int step ()> ()
<android.filterfw.core.SyncRunner: void run ()> (1)
<android.media.effect.effects.AutoFixEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.BitmapOverlayEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.BlackWhiteEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.BrightnessEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.ColorTemperatureEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.ContrastEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.CrossProcessEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.DocumentaryEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.DuotoneEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.FillLightEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.FisheyeEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.FlipEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.GrainEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.GrayscaleEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.LomoishEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.NegativeEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.PosterizeEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.RedEyeEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.SaturateEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.SepiaEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.SharpenEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.StraightenEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.TintEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.VignetteEffect: void apply (int,int,int,int)> (2)
<android.media.effect.effects.CropEffect: void apply (int,int,int,int)> (3)
<android.media.effect.effects.RotateEffect: void apply (int,int,int,int)> (3)
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<android.filterfw.core.GraphRunner: void run ()> (3)
<android.media.effect.FilterGraphEffect: void apply (int,int,int,int)> (2)
<com.android.camera.EffectsRecorder$4: void onRunnerDone (int)> (1)
<com.android.camera.EffectsRecorder: void startPreview ()> (3)
<android.media.effect.effects.BackDropperEffect: void apply (int,int,int,int)> (2)
<com.android.camera.EffectsRecorder: void setPreviewSurfaceTexture (android.graphics.SurfaceTexture,int,int)> (2)
<com.android.camera.EffectsRecorder: void startRecording ()> (1)
<com.android.camera.VideoCamera: void startPreview ()> (5)
<com.android.camera.VideoCamera: void initializeEffectsPreview ()> (1)
<com.android.camera.VideoCamera: void setPreviewTexture ()> ()
<com.android.camera.VideoCamera: void access$600 (com.android.camera.VideoCamera)> (6)
<com.android.camera.VideoCamera: void checkQualityAndStartPreview ()> (2)
<com.android.camera.VideoCamera: void onResume ()> (3)
<com.android.camera.VideoCamera: void onSharedPreferenceChanged ()> (3)
<com.android.camera.VideoCamera: void switchCamera ()> (1)
<com.android.camera.VideoCamera$1: void run ()> (1)
<com.android.camera.VideoCamera: void keepScreenOnAwhile ()> (3)
<com.android.camera.VideoCamera: void updateRecordingTime ()> (2)
<com.android.camera.VideoCamera: boolean updateEffectSelection ()> (1)
<com.android.camera.VideoCamera: void onEffectsUpdate (int,int)> (1)
<com.android.camera.ActivityBase: void onResume ()> (5)
<com.android.gallery3d.app.AbstractGalleryActivity: void onResume ()> (7)
<com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged ()> (1)
<com.android.camera.VideoCamera: void onCancelBgTraining (android.view.View)> ()
<com.android.camera.VideoCamera: void restorePreferences ()> (1)
<com.android.camera.VideoCamera: void access$1000 (com.android.camera.VideoCamera)> (7)
<com.android.camera.VideoCamera: boolean stopVideoRecording ()> (4)
<com.android.camera.VideoCamera: void onUserInteraction ()> (2)
<com.android.camera.VideoCamera: void access$200 (com.android.camera.VideoCamera)> (4)
<com.android.camera.EffectsRecorder$EffectsListener: void onEffectsUpdate (int,int)> (1)
<com.android.camera.Camera: void onResume ()> (3)
<com.android.camera.PanoramaActivity: void onResume ()> (3)
<com.android.gallery3d.app.AlbumPicker: void onResume ()> (3)
<com.android.gallery3d.app.CropImage: void onResume ()> (2)
<com.android.gallery3d.app.DialogPicker: void onResume ()> (3)
<com.android.gallery3d.app.Gallery: void onResume ()> (2)
<com.android.gallery3d.app.PickerActivity: void onResume ()> (2)
<com.android.camera.ui.IndicatorControl: void onSettingChanged ()> (8)
<com.android.camera.VideoCamera: void access$2100 (com.android.camera.VideoCamera)> (1)
<com.android.camera.VideoCamera: void onPreviewTextureCopied ()> (1)
<com.android.camera.VideoCamera: void initializeVideoSnapshot ()> (3)
<com.android.camera.VideoCamera: boolean access$1200 (com.android.camera.VideoCamera)> (1)
<com.android.camera.VideoCamera: void onError (android.media.MediaRecorder,int,int)> (1)
<com.android.camera.VideoCamera: void onReviewCancelClicked (android.view.View)> ()
<com.android.camera.VideoCamera: void onStopVideoRecording ()> (4)
<com.android.gallery3d.app.AbstractGalleryActivity: void onUserInteraction ()> (1)
<com.android.camera.EffectsRecorder$5: void run ()> (1)
<com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged ()> (1)
<com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged ()> (1)
<com.android.camera.ui.IndicatorControlBar: void onSettingChanged ()> (1)
<com.android.camera.ui.IndicatorControlContainer: void onSettingChanged ()> (1)
<com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged ()> (1)
<com.android.camera.ui.IndicatorControlWheel: void onSettingChanged ()> (1)
<com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged ()> (1)
<com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged ()> (1)
<com.android.camera.VideoCamera$3: void run ()> (1)
<com.android.camera.ActivityBase: void onPreviewTextureCopied ()> (2)
<com.android.camera.VideoCamera: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.camera.VideoCamera: void onCreate (android.os.Bundle)> (3)
<com.android.camera.VideoCamera$MyBroadcastReceiver: void onReceive (android.content.Context,android.content.Intent)> (1)
<com.android.camera.VideoCamera: void onBackPressed ()> (2)
<com.android.camera.VideoCamera: void onInfo (android.media.MediaRecorder,int,int)> (1)
<com.android.camera.VideoCamera: void onPause ()> (3)
<com.android.camera.ui.IndicatorButton: void onSettingChanged ()> (2)
<com.android.camera.ui.OtherSettingsPopup: void onSettingChanged ()> (1)
<com.android.camera.ActivityBase$MyAppBridge: void onPreviewTextureCopied ()> (1)
<com.android.camera.PanoramaActivity: void onPreviewTextureCopied ()> (1)
<com.android.gallery3d.app.AbstractGalleryActivity: void onConfigurationChanged (android.content.res.Configuration)> (7)
<com.android.camera.ActivityBase: void onCreate (android.os.Bundle)> (5)
<com.android.gallery3d.app.AbstractGalleryActivity: void onCreate (android.os.Bundle)> (5)
<com.android.gallery3d.app.AbstractGalleryActivity: void onBackPressed ()> (6)
<com.android.camera.ActivityBase: void onPause ()> (5)
<com.android.gallery3d.app.AbstractGalleryActivity: void onPause ()> (7)
<com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged ()> (1)
<com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged ()> (2)
<com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged ()> (1)
<com.android.camera.CameraScreenNail$Listener: void onPreviewTextureCopied ()> (1)
<com.android.camera.ActivityBase: void onConfigurationChanged (android.content.res.Configuration)> (5)
<com.android.gallery3d.app.AlbumPicker: void onConfigurationChanged (android.content.res.Configuration)> (3)
<com.android.gallery3d.app.CropImage: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.gallery3d.app.DialogPicker: void onConfigurationChanged (android.content.res.Configuration)> (3)
<com.android.gallery3d.app.Gallery: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.gallery3d.app.PickerActivity: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.camera.Camera: void onCreate (android.os.Bundle)> (3)
<com.android.camera.PanoramaActivity: void onCreate (android.os.Bundle)> (3)
<com.android.gallery3d.app.CropImage: void onCreate (android.os.Bundle)> (2)
<com.android.gallery3d.app.Gallery: void onCreate (android.os.Bundle)> (2)
<com.android.gallery3d.app.PickerActivity: void onCreate (android.os.Bundle)> (4)
<com.android.camera.ActivityBase: void onBackPressed ()> (5)
<com.android.gallery3d.app.AlbumPicker: void onBackPressed ()> (3)
<com.android.gallery3d.app.DialogPicker: void onBackPressed ()> (3)
<com.android.gallery3d.app.Gallery: void onBackPressed ()> (2)
<com.android.gallery3d.app.PickerActivity: void onBackPressed ()> (2)
<com.android.camera.Camera: void onPause ()> (3)
<com.android.camera.PanoramaActivity: void onPause ()> (3)
<com.android.gallery3d.app.AlbumPicker: void onPause ()> (3)
<com.android.gallery3d.app.CropImage: void onPause ()> (2)
<com.android.gallery3d.app.DialogPicker: void onPause ()> (3)
<com.android.gallery3d.app.Gallery: void onPause ()> (2)
<com.android.gallery3d.app.PickerActivity: void onPause ()> (2)
<com.android.camera.ui.BasicSettingPopup: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.camera.ui.EffectSettingPopup: void onClick (android.view.View)> (1)
<com.android.camera.ui.EffectSettingPopup: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.camera.ui.InLineSettingItem: boolean changeIndex (int)> (3)
<com.android.camera.CameraScreenNail: void draw (com.android.gallery3d.ui.GLCanvas,int,int,int,int)> (1)
<com.android.camera.Camera: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.camera.PanoramaActivity: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.gallery3d.app.AlbumPicker: void onCreate (android.os.Bundle)> (3)
<com.android.gallery3d.app.DialogPicker: void onCreate (android.os.Bundle)> (3)
<com.android.camera.Camera: void onBackPressed ()> (2)
<com.android.camera.PanoramaActivity: void onBackPressed ()> (2)
<com.android.camera.ui.InLineSettingKnob: boolean changeIndex (int)> (4)
<com.android.camera.ui.InLineSettingRestore: boolean changeIndex (int)> (1)
<com.android.camera.ui.InLineSettingSwitch: boolean changeIndex (int)> (2)
<com.android.gallery3d.ui.SurfaceTextureScreenNail: void draw (com.android.gallery3d.ui.GLCanvas,int,int,int,int)> (3)
<com.android.camera.ui.InLineSettingKnob$1: void run ()> (1)
<com.android.camera.ui.InLineSettingKnob$2: boolean onTouch (android.view.View,android.view.MotionEvent)> (1)
<com.android.camera.ui.InLineSettingKnob$3: boolean onTouch (android.view.View,android.view.MotionEvent)> (1)
<com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged (android.widget.CompoundButton,boolean)> (1)
<com.android.camera.CameraScreenNail: void directDraw (com.android.gallery3d.ui.GLCanvas,int,int,int,int)> (2)
<com.android.gallery3d.ui.ScreenNail: void draw (com.android.gallery3d.ui.GLCanvas,int,int,int,int)> (3)
<com.android.camera.CaptureAnimManager: boolean drawAnimation (com.android.gallery3d.ui.GLCanvas,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)> (1)
<com.android.camera.SwitchAnimManager: boolean drawAnimation (com.android.gallery3d.ui.GLCanvas,int,int,int,int,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)> (1)
<com.android.gallery3d.ui.PhotoView: com.android.gallery3d.ui.PhotoFallbackEffect buildFallbackEffect (com.android.gallery3d.ui.GLView,com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.PhotoView$ScreenNailPicture: void draw (com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)> (1)
<com.android.gallery3d.ui.TileImageView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.PhotoPage$PreparePhotoFallback: boolean onGLIdle (com.android.gallery3d.ui.GLCanvas,boolean)> (1)
<com.android.gallery3d.ui.PhotoView$Picture: void draw (com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)> (1)
<com.android.gallery3d.ui.GLView: void render (com.android.gallery3d.ui.GLCanvas)> (14)
<com.android.gallery3d.ui.GLRoot$OnGLIdleListener: boolean onGLIdle (com.android.gallery3d.ui.GLCanvas,boolean)> (1)
<com.android.gallery3d.ui.PhotoView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.AlbumPage$2: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.AlbumSetPage$1: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.ManageCachePage$1: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.PhotoPage$1: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.app.SlideshowPage$1: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.CropView$FaceHighlightView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.CropView$HighlightRectangle: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.CropView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.EdgeView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.GLRootView: void onDrawFrameLocked (javax.microedition.khronos.opengles.GL10)> (1)
<com.android.gallery3d.ui.GLView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (16)
<com.android.gallery3d.ui.ScrollBarView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.SlotView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.UndoBarView: void render (com.android.gallery3d.ui.GLCanvas)> (1)
<com.android.gallery3d.ui.GLRootView$IdleRunner: void run ()> (1)
<com.android.gallery3d.ui.GLRootView: void onDrawFrame (javax.microedition.khronos.opengles.GL10)> (1)
<com.android.gallery3d.app.AlbumPage$2: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.app.AlbumSetPage$1: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.app.ManageCachePage$1: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.app.PhotoPage$1: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.app.SlideshowPage$1: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.CropView$FaceHighlightView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.CropView$HighlightRectangle: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.CropView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.EdgeView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.PhotoView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (3)
<com.android.gallery3d.ui.ScrollBarView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.SlideshowView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.SlotView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.TileImageView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.UndoBarView: void renderChild (com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)> (1)
<com.android.gallery3d.ui.PhotoView$FullPicture: void drawTileView (com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)> (1)
<com.android.gallery3d.ui.PhotoView$FullPicture: void draw (com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)> (1)
