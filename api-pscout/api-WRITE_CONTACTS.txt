Permission:android.permission.WRITE_CONTACTS
1665 Callers:
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (5)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ()
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (1)
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (1)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (2)
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (2)
<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (3)
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (5)
<com.android.internal.telephony.IccProvider: boolean addIccRecordToEf (int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)> (2)
<com.android.internal.telephony.IccProvider: boolean deleteIccRecordFromEf (int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)> (2)
<com.android.internal.telephony.IccProvider: boolean updateIccRecordInEf (int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (2)
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean onTransact (int,android.os.Parcel,android.os.Parcel,int)> (2)
<com.android.internal.telephony.IccProvider: android.net.Uri insert (android.net.Uri,android.content.ContentValues)> (2)
<com.android.internal.telephony.IccProvider: int delete (android.net.Uri,java.lang.String,java.lang.String[])> (2)
<com.android.internal.telephony.IccProvider: int update (android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (2)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> (5)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> ()
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> (1)
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> (1)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> (2)
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> (2)
<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfByIndex (int,java.lang.String,java.lang.String,int,java.lang.String)> ()
<com.android.email.activity.setup.AccountSetupNames: android.net.Uri access$100 ()> (1)
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.String doInBackground (java.lang.Void[])> (1)
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask: java.lang.Object doInBackground (java.lang.Object[])> (2)
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (22)
<com.android.email.activity.MailboxFinder$FindMailboxTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageCompose$6: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageCompose$LoadMessageTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageCompose$QuickResponseChecker: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageFileView$LoadFilenameTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageList$1: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageListFragment$MessageOpenTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$1: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.setup.MailboxSettings$2: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.email.activity.UIControllerTwoPane$RefreshTask: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.emailcommon.utility.EmailAsyncTask$1: java.lang.Object callDoInBackgroundForTest (java.lang.Object[])> (1)
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commit ()> (1)
<com.android.exchange.adapter.AbstractSyncParser: void commit ()> (1)
<com.android.exchange.adapter.AbstractSyncParser: boolean parse ()> (4)
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: boolean parse ()> (3)
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: boolean parse ()> (3)
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: boolean parse ()> (3)
<com.android.exchange.adapter.Parser: boolean parse ()> ()
<com.android.exchange.adapter.CalendarSyncAdapter: boolean parse (java.io.InputStream)> (1)
<com.android.exchange.adapter.ContactsSyncAdapter: boolean parse (java.io.InputStream)> (1)
<com.android.exchange.adapter.EmailSyncAdapter: boolean parse (java.io.InputStream)> (1)
<com.android.exchange.adapter.AbstractSyncAdapter: boolean parse (java.io.InputStream)> (1)
<com.android.exchange.EasSyncService: void sync (com.android.exchange.adapter.AbstractSyncAdapter)> (3)
<com.android.exchange.EasAccountService: void sync (com.android.exchange.adapter.AbstractSyncAdapter)> (1)
<com.android.exchange.EasOutboxService: void sync (com.android.exchange.adapter.AbstractSyncAdapter)> (1)
<com.android.exchange.EasSyncService: void run ()> ()
<com.android.vcard.VCardEntry$PhoneData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.vcard.VCardEntry$EntryElement: void constructInsertOperation (java.util.List,int)> (1)
<com.android.vcard.VCardEntry$InsertOperationConstrutor: boolean onElement (com.android.vcard.VCardEntry$EntryElement)> (1)
<com.android.vcard.VCardEntry$EntryElementIterator: boolean onElement (com.android.vcard.VCardEntry$EntryElement)> (2)
<com.android.vcard.VCardEntry: void iterateAllData (com.android.vcard.VCardEntry$EntryElementIterator)> (3)
<com.android.vcard.VCardEntry: void iterateOneList (java.util.List,com.android.vcard.VCardEntry$EntryElementIterator)> (1)
<com.android.vcard.VCardEntry: boolean isIgnorable ()> (2)
<com.android.vcard.VCardEntry: java.lang.String toString ()> ()
<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations (android.content.ContentResolver,java.util.ArrayList)> (1)
<com.android.contacts.vcard.NotificationImportExportListener: void onImportParsed (com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)> (1)
<com.android.vcard.VCardEntryCommitter: void onEntryCreated (com.android.vcard.VCardEntry)> (1)
<com.android.contacts.vcard.VCardImportExportListener: void onImportParsed (com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)> (1)
<com.android.vcard.VCardEntryHandler: void onEntryCreated (com.android.vcard.VCardEntry)> (1)
<com.android.contacts.vcard.ImportProcessor: void onEntryCreated (com.android.vcard.VCardEntry)> (1)
<com.android.vcard.VCardEntryConstructor: void onEntryEnded ()> (1)
<com.android.vcard.VCardInterpreter: void onEntryEnded ()> (2)
<com.android.vcard.VCardParserImpl_V21: boolean parseOneVCard ()> (4)
<com.android.vcard.VCardParserImpl_V21: void handleNest ()> (3)
<com.android.vcard.VCardParserImpl_V21: void parse (java.io.InputStream)> (3)
<com.android.vcard.VCardParserImpl_V21: void parseOne (java.io.InputStream)> (3)
<com.android.vcard.VCardParserImpl_V30: boolean parseOneVCard ()> (1)
<com.android.vcard.VCardParserImpl_V40: boolean parseOneVCard ()> (1)
<com.android.vcard.VCardParserImpl_V21: boolean parseItem ()> (3)
<com.android.vcard.VCardParserImpl_V30: void handleNest ()> (1)
<com.android.vcard.VCardParserImpl_V40: void handleNest ()> (1)
<com.android.vcard.VCardParserImpl_V30: void parse (java.io.InputStream)> (2)
<com.android.vcard.VCardParserImpl_V40: void parse (java.io.InputStream)> (2)
<com.android.vcard.VCardParser_V21: void parse (java.io.InputStream)> (1)
<com.android.vcard.VCardParserImpl_V30: void parseOne (java.io.InputStream)> (2)
<com.android.vcard.VCardParserImpl_V40: void parseOne (java.io.InputStream)> (2)
<com.android.vcard.VCardParser_V21: void parseOne (java.io.InputStream)> (1)
<com.android.vcard.VCardParserImpl_V21: void parseItems ()> (4)
<com.android.vcard.VCardParserImpl_V30: boolean parseItem ()> (1)
<com.android.vcard.VCardParserImpl_V40: boolean parseItem ()> (1)
<com.android.vcard.VCardParser_V30: void parse (java.io.InputStream)> (1)
<com.android.vcard.VCardParser_V40: void parse (java.io.InputStream)> (1)
<com.android.vcard.VCardParser: void parse (java.io.InputStream)> (3)
<com.android.vcard.VCardParser_V30: void parseOne (java.io.InputStream)> (1)
<com.android.vcard.VCardParser_V40: void parseOne (java.io.InputStream)> (1)
<com.android.vcard.VCardParser: void parseOne (java.io.InputStream)> ()
<com.android.vcard.VCardParserImpl_V30: void parseItems ()> (1)
<com.android.vcard.VCardParserImpl_V40: void parseItems ()> (1)
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: com.android.contacts.vcard.ImportRequest constructImportRequest (byte[],android.net.Uri,java.lang.String)> (1)
<com.android.contacts.vcard.NfcImportVCardActivity: com.android.contacts.vcard.ImportRequest createImportRequest ()> (1)
<com.android.vcard.VCardParser: void parse (java.io.InputStream,com.android.vcard.VCardInterpreter)> (4)
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: void run ()> (2)
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground (com.android.contacts.vcard.VCardService[])> (1)
<com.android.contacts.vcard.ImportProcessor: boolean readOneVCard (java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int[])> (1)
<com.android.vcard.VCardParser_V21: void parse (java.io.InputStream,com.android.vcard.VCardInterpreter)> (1)
<com.android.vcard.VCardParser_V30: void parse (java.io.InputStream,com.android.vcard.VCardInterpreter)> (1)
<com.android.vcard.VCardParser_V40: void parse (java.io.InputStream,com.android.vcard.VCardInterpreter)> (1)
<com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection: void onServiceConnected (android.content.ComponentName,android.os.IBinder)> (1)
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.vcard.ImportProcessor: void runInternal ()> (1)
<com.android.contacts.vcard.ImportProcessor: void run ()> (1)
<com.android.contacts.vcard.ProcessorBase: void run ()> ()
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri (int)> (1)
<com.android.contacts.list.ContactPickerFragment: void onItemClick (int,long)> (1)
<com.android.contacts.list.ContactEntryListFragment: void onItemClick (int,long)> (1)
<com.android.contacts.list.ContactEntryListFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (8)
<com.android.contacts.list.ContactBrowseListFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.ContactPickerFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.JoinContactListFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate (android.content.ContentValues)> (1)
<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction (android.net.Uri,android.content.ContentValues)> (14)
<com.android.providers.contacts.LegacyApiSupport: int updateExtensions (long,android.content.ContentValues)> (1)
<com.android.providers.contacts.LegacyApiSupport: int update (int,long,android.content.ContentValues)> (1)
<com.android.providers.contacts.LegacyApiSupport: int updateAll (android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[])> (1)
<com.android.providers.contacts.LegacyApiSupport: int update (android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (1)
<com.android.providers.contacts.ContactsProvider2: int updateInTransaction (android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (13)
<com.android.providers.contacts.LegacyApiSupport: int updateContactMethods (long,android.content.ContentValues)> (1)
<com.android.providers.contacts.LegacyApiSupport: int updatePhoto (long,android.content.ContentValues)> (2)
<com.android.providers.contacts.LegacyApiSupport: int delete (android.net.Uri,int,long)> (1)
<com.android.providers.contacts.LegacyApiSupport: int delete (android.net.Uri,java.lang.String,java.lang.String[])> (1)
<com.android.providers.contacts.ContactsProvider2: int deleteInTransaction (android.net.Uri,java.lang.String,java.lang.String[])> (2)
<com.android.vcard.VCardEntry$EmailData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Void doInBackground (java.lang.Void[])> (1)
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.mms.data.Contact: android.net.Uri getPhoneUri ()> (1)
<com.android.mms.ui.ComposeMessageActivity: void launchMultiplePhonePicker ()> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void launchMultiplePhonePicker ()> (1)
<com.android.mms.ui.ComposeMessageActivity: void onClick (android.view.View)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onClick (android.view.View)> (1)
<com.android.contacts.ContactSaveService: void removeMembersFromGroup (android.content.ContentResolver,long[],long)> (1)
<com.android.contacts.ContactSaveService: void updateGroup (android.content.Intent)> (1)
<com.android.contacts.ContactSaveService: void onHandleIntent (android.content.Intent)> (1)
<com.android.contacts.util.ContactLoaderUtils: android.net.Uri ensureIsContactUri (android.content.ContentResolver,android.net.Uri)> (2)
<com.android.contacts.ContactLoader: com.android.contacts.ContactLoader$Result loadInBackground ()> (1)
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: android.net.Uri doInBackground (java.lang.Void[])> (1)
<com.android.contacts.ContactLoader: java.lang.Object loadInBackground ()> (1)
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.providers.contacts.LegacyApiSupport: int updateGroups (long,android.content.ContentValues)> (1)
<android.provider.ContactsContract$SyncState: void set (android.content.ContentProviderClient,android.accounts.Account,byte[])> ()
<com.android.vcard.VCardEntry$PhotoData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.contacts.model.EntityDelta: void buildDiff (java.util.ArrayList)> (1)
<com.android.contacts.model.EntityDeltaList: java.util.ArrayList buildDiff ()> (2)
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Integer doInBackground (com.android.contacts.model.EntityDeltaList[])> (1)
<com.android.contacts.ContactSaveService: void saveContact (android.content.Intent)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.vcard.VCardEntry$ImData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: android.content.ContentProviderOperation buildDiff ()> (1)
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void buildDiff (java.util.ArrayList)> (1)
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff ()> (1)
<com.android.contacts.list.CustomContactListFilterActivity: void doSaveAction ()> (1)
<com.android.contacts.list.CustomContactListFilterActivity: void onClick (android.view.View)> (1)
<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation (android.accounts.Account,byte[])> ()
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri findFirstDataRow (long,java.lang.String)> (1)
<com.android.providers.contacts.LegacyApiSupport: int updatePeople (long,android.content.ContentValues)> (1)
<com.android.contacts.ContactSaveService: void renameGroup (android.content.Intent)> (1)
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri (long,java.lang.String)> (18)
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri (android.content.ContentResolver,android.net.Uri)> ()
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri (android.content.ContentResolver,android.net.Uri)> (2)
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri (android.content.ContentResolver,android.net.Uri)> (7)
<android.widget.QuickContactBadge$QueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.calendar.event.AttendeesView$PresenceQueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.contacts.activities.ShowOrCreateActivity: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupContactFromUri (android.net.Uri)> (2)
<com.android.contacts.editor.AggregationSuggestionView: boolean handleItemClickEvent ()> (1)
<com.android.contacts.group.GroupEditorFragment$Member: void <init> (long,java.lang.String,long,java.lang.String,java.lang.String)> (2)
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (10)
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor)> (3)
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor)> (1)
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.lang.String buildUri ()> (2)
<com.android.calendar.EventInfoFragment: void showContactInfo (com.android.calendar.CalendarEventModel$Attendee,android.graphics.Rect)> ()
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result getContactInfo (android.content.Context,java.lang.String)> (2)
<com.android.contacts.ContactSaveService: void createRawContact (android.content.Intent)> (1)
<com.android.contacts.ContactSaveService: void joinContacts (android.content.Intent)> (1)
<com.android.contacts.quickcontact.QuickContactActivity: void onCreate (android.os.Bundle)> (1)
<com.android.contacts.vcard.NfcImportVCardActivity: void onImportFinished (com.android.contacts.vcard.ImportRequest,int,android.net.Uri)> (1)
<com.android.contacts.vcard.NotificationImportExportListener: void onImportFinished (com.android.contacts.vcard.ImportRequest,int,android.net.Uri)> (1)
<com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForPhoneNumber (java.lang.String,java.lang.String)> (1)
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForSipAddress (java.lang.String)> (1)
<com.android.contacts.editor.ContactEditorFragment$1: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.ContactEntryListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (9)
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (2)
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (2)
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getContactUri (int,android.database.Cursor,int,int)> (1)
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri (int)> (5)
<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri ()> (3)
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri (int,android.database.Cursor)> (1)
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.util.ArrayList asList (java.lang.String[])> (1)
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: void addColumnValue (java.util.ArrayList,java.lang.String)> (1)
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result loadInBackground ()> (1)
<com.android.email.NotificationController: android.graphics.Bitmap getSenderPhoto (com.android.emailcommon.provider.EmailContent$Message)> (1)
<com.android.contacts.vcard.VCardImportExportListener: void onImportFinished (com.android.contacts.vcard.ImportRequest,int,android.net.Uri)> (1)
<com.android.contacts.util.NotifyingAsyncQueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber (java.lang.String,java.lang.String)> (2)
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.ContactListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.DefaultContactListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (3)
<com.android.contacts.list.EmailAddressListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.JoinContactListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (2)
<com.android.contacts.list.LegacyContactListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (2)
<com.android.contacts.list.PostalAddressListAdapter: void bindQuickContact (com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void selectDefaultContact ()> (3)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick (int,long)> (1)
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri (int)> (1)
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri (int)> (2)
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getFirstContactUri ()> (1)
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getFirstContactUri ()> (1)
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor addSearchSuggestionsBasedOnFilter (android.database.MatrixCursor,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> (2)
<com.android.email.activity.ContactStatusLoader: java.lang.Object loadInBackground ()> (1)
<com.android.email.NotificationController: android.app.Notification createNewMessageNotification (long,long,android.database.Cursor,long,int,int)> (1)
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails getPhoneCallDetailsForUri (android.net.Uri)> (1)
<com.android.contacts.calllog.CallLogAdapter: boolean queryContactInfo (java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)> (1)
<com.android.contacts.list.DefaultContactListAdapter: void bindView (android.view.View,int,android.database.Cursor,int)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: void bindView (android.view.View,int,android.database.Cursor,int)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void checkSelection ()> (2)
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectDefaultContact ()> (1)
<com.android.contacts.list.JoinContactListFragment: void onItemClick (int,long)> (1)
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh (android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)> (2)
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery (android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)> (2)
<com.android.email.NotificationController$MessageContentObserver: void onChange (boolean)> (1)
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails access$300 (com.android.contacts.CallDetailActivity,android.net.Uri)> (1)
<com.android.contacts.calllog.CallLogAdapter: boolean access$300 (com.android.contacts.calllog.CallLogAdapter,java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)> (1)
<com.android.common.widget.CompositeCursorAdapter: void bindView (android.view.View,int,android.database.Cursor,int)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void onContactUriQueryFinished (android.net.Uri)> (3)
<com.android.contacts.list.DefaultContactBrowseListFragment: void checkSelection ()> (1)
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal (android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)> (5)
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query (android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> (4)
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: com.android.contacts.PhoneCallDetails[] doInBackground (java.lang.Void[])> (1)
<com.android.contacts.calllog.CallLogAdapter$QueryThread: void run ()> (2)
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (17)
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute (android.net.Uri)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void refreshSelectedContactUri ()> (3)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onContactUriQueryFinished (android.net.Uri)> (1)
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query (android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> (2)
<com.android.providers.contacts.ContactsProvider2: int updateData (android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)> (2)
<com.android.providers.contacts.ContactsProvider2: long insertSettings (android.net.Uri,android.content.ContentValues)> (1)
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getContactMethodType (android.net.Uri)> (1)
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.calllog.CallLogAdapter: void startRequestProcessing ()> (2)
<com.android.calendar.EmailAddressAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (17)
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.ContactListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.email.EmailAddressAdapter: android.view.View getView (int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute (java.lang.Object)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (3)
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri (android.net.Uri,boolean,boolean,boolean,boolean)> (7)
<com.android.contacts.list.DefaultContactBrowseListFragment: void refreshSelectedContactUri ()> (1)
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query (android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> (5)
<com.android.providers.contacts.ContactsProvider2: void cleanupPhotoStore ()> (1)
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType (android.net.Uri)> (1)
<com.android.contacts.calllog.CallLogAdapter: void access$100 (com.android.contacts.calllog.CallLogAdapter)> (1)
<com.android.contacts.calllog.CallLogAdapter: void enqueueRequest (java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,boolean)> (1)
<com.android.calendar.EmailAddressAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (3)
<com.android.contacts.list.ContactListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (3)
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.email.EmailAddressAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (2)
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (7)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (2)
<com.android.contacts.list.ContactBrowseListFragment: void reloadDataAndSetSelectedUri (android.net.Uri)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void restoreSelectedUri (boolean)> (4)
<com.android.contacts.list.ContactBrowseListFragment: void selectFirstFoundContactAfterDelay ()> (2)
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri (android.net.Uri)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void viewContact (android.net.Uri)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri (android.net.Uri,boolean,boolean,boolean,boolean)> (1)
<com.android.providers.contacts.ContactsProvider2: int deleteData (java.lang.String,java.lang.String[],boolean)> (1)
<com.android.providers.contacts.ContactsProvider2: int deleteData (long,java.lang.String[])> (1)
<com.android.providers.contacts.ContactsProvider2: void performBackgroundTask (int,java.lang.Object)> (1)
<com.android.providers.contacts.ContactsProvider2: java.lang.String getType (android.net.Uri)> (2)
<com.android.contacts.calllog.CallLogAdapter: void bindView (android.view.View,android.database.Cursor,int)> (3)
<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (5)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (2)
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (2)
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void reloadDataAndSetSelectedUri (android.net.Uri)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void onAttach (android.app.Activity)> (3)
<com.android.contacts.list.ContactBrowseListFragment: void setFilter (com.android.contacts.list.ContactListFilter,boolean)> (2)
<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode (boolean)> (2)
<com.android.contacts.list.DefaultContactBrowseListFragment: void restoreSelectedUri (boolean)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectFirstFoundContactAfterDelay ()> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri (android.net.Uri)> (3)
<com.android.contacts.list.DefaultContactBrowseListFragment: void viewContact (android.net.Uri)> (2)
<com.android.contacts.calllog.CallLogAdapter: void bindChildView (android.view.View,android.content.Context,android.database.Cursor)> (1)
<com.android.contacts.calllog.CallLogAdapter: void bindGroupView (android.view.View,android.content.Context,android.database.Cursor,int,boolean)> (1)
<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView (android.view.View,android.content.Context,android.database.Cursor)> (1)
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.list.ContactEntryListFragment: void onAttach (android.app.Activity)> (7)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onAttach (android.app.Activity)> (3)
<com.android.contacts.list.ContactBrowseListFragment: void setFilter (com.android.contacts.list.ContactListFilter)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter (com.android.contacts.list.ContactListFilter,boolean)> (2)
<com.android.contacts.list.ContactEntryListFragment: void setSearchMode (boolean)> (7)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode (boolean)> (2)
<com.android.contacts.activities.PeopleActivity: void configureContactListFragmentForRequest ()> (1)
<com.android.common.widget.GroupingListAdapter: void bindChildView (android.view.View,android.content.Context,android.database.Cursor)> (1)
<com.android.common.widget.GroupingListAdapter: void bindGroupView (android.view.View,android.content.Context,android.database.Cursor,int,boolean)> (1)
<com.android.common.widget.GroupingListAdapter: void bindStandAloneView (android.view.View,android.content.Context,android.database.Cursor)> (1)
<com.android.contacts.list.ContactPickerFragment: void onAttach (android.app.Activity)> (2)
<com.android.contacts.list.EmailAddressPickerFragment: void onAttach (android.app.Activity)> (2)
<com.android.contacts.list.JoinContactListFragment: void onAttach (android.app.Activity)> (2)
<com.android.contacts.list.PhoneNumberPickerFragment: void onAttach (android.app.Activity)> (2)
<com.android.contacts.list.PostalAddressPickerFragment: void onAttach (android.app.Activity)> (2)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter (com.android.contacts.list.ContactListFilter)> (5)
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onInvalidSelection ()> (1)
<com.android.contacts.list.ContactEntryListFragment: void setQueryString (java.lang.String,boolean)> (7)
<com.android.contacts.list.ContactPickerFragment: void setSearchMode (boolean)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void setSearchMode (boolean)> (1)
<com.android.contacts.list.JoinContactListFragment: void setSearchMode (boolean)> (2)
<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode (boolean)> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void setSearchMode (boolean)> (1)
<com.android.contacts.activities.PeopleActivity: void configureFragments (boolean)> (3)
<com.android.common.widget.GroupingListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.contacts.activities.PeopleActivity: void configureContactListFragment ()> (1)
<com.android.contacts.activities.PeopleActivity: void onContactListFilterChanged ()> (1)
<com.android.contacts.list.OnContactBrowserActionListener: void onInvalidSelection ()> (1)
<com.android.contacts.activities.ContactSelectionActivity: boolean onQueryTextChange (java.lang.String)> (1)
<com.android.contacts.list.ContactBrowseListFragment: void setQueryString (java.lang.String,boolean)> (2)
<com.android.contacts.list.ContactPickerFragment: void setQueryString (java.lang.String,boolean)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void setQueryString (java.lang.String,boolean)> (1)
<com.android.contacts.list.JoinContactListFragment: void setQueryString (java.lang.String,boolean)> (2)
<com.android.contacts.list.PhoneNumberPickerFragment: void setQueryString (java.lang.String,boolean)> (2)
<com.android.contacts.list.PostalAddressPickerFragment: void setQueryString (java.lang.String,boolean)> (1)
<com.android.contacts.activities.PeopleActivity: void onAction (int)> (1)
<com.android.contacts.activities.PeopleActivity: void onNewIntent (android.content.Intent)> (3)
<com.android.contacts.activities.PeopleActivity: void onStart ()> (3)
<com.android.contacts.calllog.CallLogAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.list.ContactListFilterController$ContactListFilterListener: void onContactListFilterChanged ()> (1)
<com.android.contacts.list.ContactBrowseListFragment: void notifyInvalidSelection ()> (2)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setQueryString (java.lang.String,boolean)> (3)
<com.android.contacts.activities.JoinContactActivity: boolean onQueryTextChange (java.lang.String)> (1)
<com.android.contacts.activities.DialtactsActivity$7: boolean onQueryTextChange (java.lang.String)> (1)
<com.android.contacts.activities.ActionBarAdapter$Listener: void onAction (int)> (2)
<com.android.contacts.activities.TransactionSafeActivity: void onNewIntent (android.content.Intent)> (1)
<com.android.contacts.ContactsActivity: void onNewIntent (android.content.Intent)> (5)
<com.android.contacts.activities.TransactionSafeActivity: void onStart ()> (18)
<com.android.contacts.ContactsActivity: void onStart ()> (4)
<com.android.contacts.list.ContactListFilterControllerImpl: void notifyContactListFilterChanged ()> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void notifyInvalidSelection ()> (1)
<com.android.contacts.activities.PeopleActivity: void setQueryTextToFragment (java.lang.String)> (2)
<com.android.contacts.activities.ActionBarAdapter: boolean onQueryTextChange (java.lang.String)> (1)
<com.android.contacts.activities.ActionBarAdapter: void update ()> (2)
<com.android.contacts.activities.ContactEditorActivity: void onNewIntent (android.content.Intent)> (3)
<com.android.contacts.activities.GroupEditorActivity: void onNewIntent (android.content.Intent)> (3)
<com.android.contacts.ContactsActivity: void onServiceCompleted (android.content.Intent)> (18)
<com.android.contacts.activities.AttachPhotoActivity: void onStart ()> (3)
<com.android.contacts.activities.ContactDetailActivity: void onStart ()> (3)
<com.android.contacts.activities.ContactEditorActivity: void onStart ()> (3)
<com.android.contacts.activities.ContactSelectionActivity: void onStart ()> (3)
<com.android.contacts.activities.DialtactsActivity: void onStart ()> (2)
<com.android.contacts.activities.GroupBrowserActivity: void onStart ()> (3)
<com.android.contacts.activities.GroupDetailActivity: void onStart ()> (3)
<com.android.contacts.activities.GroupEditorActivity: void onStart ()> (3)
<com.android.contacts.activities.JoinContactActivity: void onStart ()> (3)
<com.android.contacts.activities.NonPhoneActivity: void onStart ()> (3)
<com.android.contacts.activities.ShowOrCreateActivity: void onStart ()> (3)
<com.android.contacts.CallContactActivity: void onStart ()> (3)
<com.android.contacts.list.AccountFilterActivity: void onStart ()> (3)
<com.android.contacts.test.FragmentTestActivity: void onStart ()> (3)
<com.android.contacts.vcard.ImportVCardActivity: void onStart ()> (3)
<com.android.contacts.vcard.SelectAccountActivity: void onStart ()> (3)
<com.android.contacts.list.CustomContactListFilterActivity: void onStart ()> (3)
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter (com.android.contacts.list.ContactListFilter,boolean,boolean)> (2)
<com.android.contacts.activities.ActionBarAdapter: void initialize (android.os.Bundle,com.android.contacts.list.ContactsRequest)> (2)
<com.android.contacts.activities.ActionBarAdapter: void setSearchMode (boolean)> (6)
<com.android.contacts.activities.AttachPhotoActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.ContactDetailActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.ContactEditorActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.ContactSelectionActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.GroupBrowserActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.GroupDetailActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.GroupEditorActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.JoinContactActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.NonPhoneActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.PeopleActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.activities.ShowOrCreateActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.CallContactActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.ContactSaveService$Listener: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.list.AccountFilterActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.list.CustomContactListFilterActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.test.FragmentTestActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.vcard.ImportVCardActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.vcard.SelectAccountActivity: void onServiceCompleted (android.content.Intent)> (1)
<com.android.contacts.list.ContactListFilterControllerImpl: void checkFilterValidity (boolean)> (2)
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter (com.android.contacts.list.ContactListFilter,boolean)> (2)
<com.android.contacts.activities.PeopleActivity: void createViewsAndFragments (android.os.Bundle)> (1)
<com.android.contacts.activities.ActionBarAdapter: boolean onClose ()> (1)
<com.android.contacts.activities.PeopleActivity: boolean onSearchRequested ()> (4)
<com.android.contacts.activities.PeopleActivity: void onBackPressed ()> (5)
<com.android.contacts.ContactSaveService: void deliverCallbackOnUiThread (android.content.Intent)> (1)
<com.android.contacts.list.ContactListFilterControllerImpl: void <init> (android.content.Context)> (1)
<com.android.contacts.list.ContactListFilterController: void checkFilterValidity (boolean)> (4)
<com.android.contacts.list.ContactListFilterControllerImpl: void selectCustomFilter ()> (1)
<com.android.contacts.list.ContactListFilterController: void setContactListFilter (com.android.contacts.list.ContactListFilter,boolean)> (4)
<com.android.contacts.activities.PeopleActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.PeopleActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.activities.TransactionSafeActivity: boolean onSearchRequested ()> (1)
<com.android.contacts.ContactsActivity: boolean onSearchRequested ()> (2)
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onFinishAction ()> (1)
<com.android.contacts.activities.TransactionSafeActivity: void onBackPressed ()> (2)
<com.android.contacts.ContactsActivity: void onBackPressed ()> (4)
<com.android.contacts.ContactSaveService$2: void run ()> (1)
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController createContactListFilterController (android.content.Context)> (2)
<com.android.contacts.model.AccountTypeManagerImpl$1: void run ()> (1)
<com.android.contacts.list.ContactListFilterController: void selectCustomFilter ()> (1)
<com.android.contacts.util.AccountFilterUtil: void handleAccountFilterResult (com.android.contacts.list.ContactListFilterController,int,android.content.Intent)> (5)
<com.android.contacts.activities.TransactionSafeActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.ContactsActivity: void onCreate (android.os.Bundle)> (19)
<com.android.contacts.activities.TransactionSafeActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (1)
<com.android.contacts.ContactsActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (7)
<com.android.contacts.list.OnContactBrowserActionListener: void onFinishAction ()> (1)
<com.android.contacts.activities.DialtactsActivity: void onBackPressed ()> (2)
<com.android.contacts.activities.GroupEditorActivity: void onBackPressed ()> (3)
<com.android.contacts.ContactsApplication: java.lang.Object getSystemService (java.lang.String)> (3)
<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilterController createContactListFilterController (android.content.Context)> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onActivityResult (int,int,android.content.Intent)> (2)
<com.android.contacts.list.PhoneFavoriteFragment: void onActivityResult (int,int,android.content.Intent)> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onActivityResult (int,int,android.content.Intent)> (2)
<com.android.contacts.activities.DialtactsActivity: void onCreate (android.os.Bundle)> (2)
<com.android.contacts.activities.AttachPhotoActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.ContactDetailActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.ContactEditorActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.ContactSelectionActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.GroupBrowserActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.GroupDetailActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.GroupEditorActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.JoinContactActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.NonPhoneActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.ShowOrCreateActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.CallContactActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.list.AccountFilterActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.list.CustomContactListFilterActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.test.FragmentTestActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.vcard.ImportVCardActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.vcard.SelectAccountActivity: void onCreate (android.os.Bundle)> (3)
<com.android.contacts.activities.ContactSelectionActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.activities.GroupDetailActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.activities.JoinContactActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.list.AccountFilterActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.list.CustomContactListFilterActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (3)
<com.android.contacts.list.ContactBrowseListFragment: void finish ()> (2)
<com.android.contacts.list.ContactEntryListFragment: void onActivityResult (int,int,android.content.Intent)> (1)
<com.android.contacts.list.ContactEntryListFragment: void finish ()> (7)
<com.android.contacts.list.DefaultContactBrowseListFragment: void finish ()> (2)
<com.android.contacts.list.ContactEntryListFragment: void onClose ()> (7)
<com.android.contacts.list.ContactPickerFragment: void finish ()> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void finish ()> (1)
<com.android.contacts.list.JoinContactListFragment: void finish ()> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void finish ()> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void finish ()> (1)
<com.android.contacts.list.ContactBrowseListFragment: void onClose ()> (1)
<com.android.contacts.list.ContactPickerFragment: void onClose ()> (1)
<com.android.contacts.list.DefaultContactBrowseListFragment: void onClose ()> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void onClose ()> (1)
<com.android.contacts.list.JoinContactListFragment: void onClose ()> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onClose ()> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void onClose ()> (1)
<com.android.providers.contacts.LegacyApiSupport: int updateOrganizations (long,android.content.ContentValues)> (1)
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff (java.util.ArrayList,int,int,int[])> (1)
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff (java.util.ArrayList,int[])> (1)
<android.provider.Contacts$People: android.net.Uri addToGroup (android.content.ContentResolver,long,long)> (2)
<android.provider.Contacts$People: android.net.Uri addToGroup (android.content.ContentResolver,long,java.lang.String)> ()
<android.provider.Contacts$People: android.net.Uri addToMyContactsGroup (android.content.ContentResolver,long)> (1)
<android.provider.Contacts$People: android.net.Uri createPersonInMyContactsGroup (android.content.ContentResolver,android.content.ContentValues)> ()
<com.android.phone.SimContacts: void actuallyImportOneSimContact (android.database.Cursor,android.content.ContentResolver,android.accounts.Account)> (2)
<com.android.phone.SimContacts: void access$100 (android.database.Cursor,android.content.ContentResolver,android.accounts.Account)> (1)
<com.android.phone.SimContacts: void importOneSimContact (int)> (2)
<com.android.phone.SimContacts$ImportAllSimContactsThread: void run ()> (2)
<com.android.phone.SimContacts: boolean onContextItemSelected (android.view.MenuItem)> (3)
<com.android.phone.SimContacts: void onListItemClick (android.widget.ListView,android.view.View,int,long)> (1)
<com.android.phone.SimContacts: boolean onOptionsItemSelected (android.view.MenuItem)> (2)
<com.android.phone.ADNList: boolean onContextItemSelected (android.view.MenuItem)> (3)
<com.android.exchange.adapter.ContactsSyncAdapter: void cleanup ()> (1)
<com.android.exchange.adapter.AbstractSyncAdapter: void cleanup ()> (1)
<com.android.contacts.model.EntityDeltaList: android.content.ContentProviderOperation$Builder beginKeepTogether ()> (1)
<android.provider.Contacts$People: void markAsContacted (android.content.ContentResolver,long)> ()
<android.provider.CallLog$Calls: android.net.Uri addCall (com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)> (1)
<com.android.phone.CallLogAsync$AddCallTask: android.net.Uri[] doInBackground (com.android.phone.CallLogAsync$AddCallArgs[])> (1)
<com.android.phone.CallLogAsync$AddCallTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getDataUri (int)> (1)
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick (int,long)> (1)
<com.android.vcard.VCardEntry$AnniversaryData: void constructInsertOperation (java.util.List,int)> (1)
<android.provider.Contacts$ContactMethods: void addPostalLocation (android.content.Context,long,double,double)> ()
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri (int)> (1)
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick (int,long)> (1)
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri ()> (1)
<com.android.contacts.detail.ContactDetailUpdatesFragment$2: void onClick (android.view.View)> (1)
<com.android.exchange.adapter.ContactsSyncAdapter: void dirtyContactsWithinDirtyGroups ()> (1)
<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges (com.android.exchange.adapter.Serializer)> (1)
<com.android.exchange.adapter.AbstractSyncAdapter: boolean sendLocalChanges (com.android.exchange.adapter.Serializer)> (1)
<com.android.contacts.ContactSaveService: void setSuperPrimary (android.content.Intent)> (1)
<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getGroupUriFromId (long)> (3)
<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (1)
<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition ()> (1)
<com.android.contacts.group.GroupBrowseListAdapter: void setCursor (android.database.Cursor)> (1)
<com.android.contacts.group.GroupBrowseListFragment: void requestSelectionToScreen ()> (1)
<com.android.contacts.group.GroupBrowseListFragment: void bindGroupList ()> (1)
<com.android.contacts.group.GroupBrowseListFragment: void access$400 (com.android.contacts.group.GroupBrowseListFragment)> (1)
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished (android.content.Loader,android.database.Cursor)> (1)
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.vcard.VCardEntry$NameData: void constructInsertOperation (java.util.List,int)> (1)
<android.provider.ContactsContract$Contacts: void markAsContacted (android.content.ContentResolver,long)> ()
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Void doInBackground (java.lang.Void[])> (1)
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.ContactSaveService: void addMembersToGroup (android.content.ContentResolver,long[],long)> (2)
<com.android.contacts.ContactSaveService: void createGroup (android.content.Intent)> (1)
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForEmail (java.lang.String)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForEmail (java.lang.String)> (1)
<com.android.mms.ui.ComposeMessageActivity: void addCallAndContactMenuItems (android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addCallAndContactMenuItems (android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$2700 (com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)> (2)
<com.android.mms.ui.ComposeMessageActivity$10: void onCreateContextMenu (android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$2700 (com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)> (1)
<android.provider.ContactsContract$Directory: void notifyDirectoryChange (android.content.ContentResolver)> ()
<com.android.exchange.adapter.ContactsSyncAdapter: void setSyncKey (java.lang.String,boolean)> (2)
<com.android.exchange.adapter.AbstractSyncAdapter: void setSyncKey (java.lang.String,boolean)> (3)
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey ()> (2)
<com.android.exchange.adapter.AccountSyncAdapter: void setSyncKey (java.lang.String,boolean)> (1)
<com.android.exchange.adapter.EmailSyncAdapter: void setSyncKey (java.lang.String,boolean)> (1)
<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey ()> (5)
<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getSyncKey ()> (1)
<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getSyncKey ()> (3)
<com.android.exchange.adapter.EmailSyncAdapter: boolean sendLocalChanges (com.android.exchange.adapter.Serializer)> (1)
<com.android.exchange.adapter.EmailSyncAdapter: int getEstimate (java.lang.String)> (1)
<com.android.exchange.adapter.EmailSyncAdapter: void getAutomaticLookback ()> (1)
<com.android.contacts.detail.ContactLoaderFragment: android.net.Uri getPreAuthorizedUri (android.net.Uri)> (1)
<com.android.contacts.detail.ContactLoaderFragment: boolean onOptionsItemSelected (android.view.MenuItem)> (1)
<com.android.contacts.ContactSaveService: void clearPrimary (android.content.Intent)> (1)
<com.android.contacts.ContactSaveService: void buildJoinContactDiff (java.util.ArrayList,long,long)> (1)
<com.android.providers.contacts.LegacyApiSupport: int updatePhones (long,android.content.ContentValues)> (1)
<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation (android.accounts.Account,byte[])> ()
<com.android.providers.contacts.LegacyApiSupport: void updateLegacyPhotoData (long,long,android.content.ContentValues)> (2)
<com.android.providers.contacts.LegacyApiSupport: int updatePhotoByDataId (long,android.content.ContentValues)> (1)
<com.android.vcard.VCardEntry$SipData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.vcard.VCardEntry$NicknameData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.common.contacts.DataUsageStatUpdater: boolean update (java.util.Collection,java.util.Collection,java.lang.String)> (2)
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithAddress (java.util.Collection)> (2)
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithPhoneNumber (java.util.Collection)> (1)
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithRfc822Address (java.util.Collection)> (1)
<com.android.mail.providers.UIProvider: void incrementRecipientsTimesContacted (android.content.Context,java.lang.String)> ()
<com.android.mms.data.WorkingMessage: void updateSendStats (com.android.mms.data.Conversation)> (1)
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Long doInBackground (java.lang.Void[])> (1)
<com.android.mms.data.WorkingMessage: void access$800 (com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)> (2)
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.mms.data.WorkingMessage$2: void run ()> (1)
<com.android.mms.data.WorkingMessage$3: void run ()> (1)
<com.android.vcard.VCardEntry$OrganizationData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.providers.telephony.SmsProvider: android.net.Uri insert (android.net.Uri,android.content.ContentValues)> (1)
<android.provider.Contacts$Settings: void setSetting (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)> ()
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getDataUri (int)> (1)
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick (int,long)> (1)
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactMethodUri (int)> (1)
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri (int)> (2)
<com.android.contacts.list.PhoneFavoriteFragment: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.GroupMetaDataLoader: android.net.Uri ensureIsGroupUri (android.net.Uri)> (1)
<com.android.contacts.GroupMetaDataLoader: void <init> (android.content.Context,android.net.Uri)> (3)
<com.android.contacts.editor.ContactEditorFragment$5: android.content.CursorLoader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupDetailFragment$2: android.content.CursorLoader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupEditorFragment$2: android.content.CursorLoader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.editor.ContactEditorFragment$5: android.content.Loader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupDetailFragment$2: android.content.Loader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupEditorFragment$2: android.content.Loader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.vcard.VCardEntry$AndroidCustomData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.vcard.VCardEntry$WebsiteData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.vcard.VCardEntry$BirthdayData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri ()> (1)
<com.android.phone.CallCard: void updatePhotoForCallState (com.android.internal.telephony.Call)> (3)
<com.android.phone.CallCard: void displayMainCallStatus (com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)> (3)
<com.android.phone.CallCard: void onImageLoadComplete (int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)> (1)
<com.android.phone.CallCard: void onQueryComplete (int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (1)
<com.android.phone.CallCard: void updateForegroundCall (com.android.internal.telephony.CallManager)> (1)
<com.android.phone.CallCard: void updateNoCall (com.android.internal.telephony.CallManager)> (1)
<com.android.phone.CallCard: void updateRingingCall (com.android.internal.telephony.CallManager)> (1)
<com.android.phone.ContactsAsyncHelper$OnImageLoadCompleteListener: void onImageLoadComplete (int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)> (1)
<com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener: void onQueryComplete (int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (1)
<com.android.phone.CallCard: void updateState (com.android.internal.telephony.CallManager)> (10)
<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.phone.InCallScreen: void updateIncomingCallWidgetHint (int,int)> (2)
<com.android.phone.InCallScreen: void updateScreen ()> (5)
<com.android.phone.InCallScreen: void onResume ()> (1)
<com.android.phone.InCallScreen: void onDisconnect (android.os.AsyncResult)> (1)
<com.android.phone.InCallScreen: void showPausePromptDialog (com.android.internal.telephony.Connection,java.lang.String)> (1)
<com.android.phone.InCallScreen: void requestUpdateBluetoothIndication ()> (1)
<com.android.phone.InCallScreen: void requestCloseOtaFailureNotice (long)> (1)
<com.android.phone.InCallScreen: void requestCloseSpcErrorNotice (long)> (1)
<com.android.phone.InCallScreen: void requestRemoveProviderInfoWithDelay ()> (1)
<com.android.phone.InCallTouchUi: void onGrabbedStateChange (android.view.View,int)> (1)
<com.android.phone.InCallTouchUi: void onTrigger (android.view.View,int)> (1)
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$SyncWithPhoneStateStatus syncWithPhoneState ()> (2)
<com.android.phone.InCallScreen: void access$600 (com.android.phone.InCallScreen)> (9)
<com.android.phone.InCallScreen: void handleOtaCallEnd ()> (2)
<com.android.phone.InCallScreen: void access$500 (com.android.phone.InCallScreen,android.os.AsyncResult)> (1)
<com.android.phone.InCallScreen: void handlePostOnDialChars (android.os.AsyncResult,char)> (1)
<com.android.phone.PhoneApp: void updateBluetoothIndication (boolean)> (2)
<com.android.phone.OtaUtils: void otaShowProgramFailureNotice (int)> (1)
<com.android.phone.OtaUtils: void otaShowSpcErrorNotice (int)> (2)
<com.android.phone.CallCard: void updateCallStateWidgets (com.android.internal.telephony.Call)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onGrabbedStateChange (android.view.View,int)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onTrigger (android.view.View,int)> (1)
<com.android.phone.InCallScreen: void updateManageConferencePanelIfNecessary ()> (1)
<com.android.phone.InCallScreen: void requestUpdateScreen ()> (9)
<com.android.phone.OtaUtils: void onClickOtaEndButton ()> (1)
<com.android.phone.PhoneApp: void dismissCallScreen ()> (2)
<com.android.phone.InCallScreen: void access$1000 (com.android.phone.InCallScreen,android.os.AsyncResult,char)> (1)
<com.android.phone.CallNotifier: void onPhoneStateChanged (android.os.AsyncResult)> (2)
<com.android.phone.PhoneApp$PhoneAppBroadcastReceiver: void onReceive (android.content.Context,android.content.Intent)> (1)
<com.android.phone.OtaUtils: void otaShowProgramFailure (int)> (1)
<com.android.phone.OtaUtils: void onOtaProvisionStatusChanged (android.os.AsyncResult)> (1)
<com.android.phone.OtaUtils: void otaShowProperScreen ()> (2)
<com.android.internal.widget.multiwaveview.GlowPadView: void setGrabbedState (int)> (2)
<com.android.internal.widget.multiwaveview.GlowPadView: void dispatchTriggerEvent (int)> (1)
<com.android.phone.InCallScreen: void handleOnscreenButtonClick (int)> (2)
<com.android.phone.InCallScreen: void onBackPressed ()> (1)
<com.android.phone.InCallScreen: void onClick (android.view.View)> (1)
<com.android.phone.InCallScreen: void onPhoneStateChanged (android.os.AsyncResult)> (1)
<com.android.phone.InCallScreen: void updateAfterRadioTechnologyChange ()> (1)
<com.android.phone.OtaUtils: void otaPerformActivation ()> (1)
<com.android.phone.PhoneApp: void updateInCallScreen ()> (7)
<com.android.phone.RespondViaSmsManager$RespondViaSmsCancelListener: void onCancel (android.content.DialogInterface)> (1)
<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.phone.OtaUtils: void onClickHandler (int)> (1)
<com.android.phone.CallNotifier: void onUnknownConnectionAppeared (android.os.AsyncResult)> (1)
<com.android.phone.OtaUtils: void otaShowSuccessFailure ()> (1)
<com.android.phone.PhoneApp: void handleOtaspEvent (android.os.Message)> (1)
<com.android.phone.InCallScreen: void onDialerClose (boolean)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: void doFinish ()> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: void switchToState (int,float,float)> (6)
<com.android.phone.InCallTouchUi: void onClick (android.view.View)> (1)
<com.android.phone.InCallScreen: void access$400 (com.android.phone.InCallScreen,android.os.AsyncResult)> (1)
<com.android.phone.PhoneApp: void initForNewRadioTechnology ()> (1)
<com.android.phone.OtaUtils: void onClickOtaActivateButton ()> (1)
<com.android.phone.EmergencyCallHelper: void cleanup ()> (4)
<com.android.phone.PhoneApp$MediaButtonBroadcastReceiver: void onReceive (android.content.Context,android.content.Intent)> (1)
<com.android.phone.CallController: com.android.phone.Constants$CallStatusCode placeCallInternal (android.content.Intent)> (1)
<com.android.phone.CallNotifier: void onCdmaCallWaiting (android.os.AsyncResult)> (1)
<com.android.phone.DTMFTwelveKeyDialer: void onDialerClose (boolean)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: boolean trySwitchToFirstTouchState (float,float)> (2)
<com.android.internal.widget.multiwaveview.GlowPadView: void access$300 (com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)> (2)
<com.android.internal.widget.multiwaveview.GlowPadView: void handleCancel (android.view.MotionEvent)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: void handleDown (android.view.MotionEvent)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: void handleMove (android.view.MotionEvent)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: void handleUp (android.view.MotionEvent)> (1)
<com.android.phone.PhoneApp: void access$1100 (com.android.phone.PhoneApp)> (1)
<com.android.phone.EmergencyCallHelper: void onDisconnect (android.os.Message)> (2)
<com.android.phone.EmergencyCallHelper: void onRetryTimeout ()> (3)
<com.android.phone.EmergencyCallHelper: void scheduleRetryOrBailOut ()> (3)
<com.android.phone.EmergencyCallHelper: void startSequenceInternal (android.os.Message)> (2)
<com.android.phone.CallController: void placeCall (android.content.Intent)> (3)
<com.android.phone.DTMFTwelveKeyDialer: void closeDialer (boolean)> (7)
<com.android.internal.widget.multiwaveview.GlowPadView$1: void onAnimationEnd (android.animation.Animator)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd (android.animation.Animator)> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent (android.view.MotionEvent)> (2)
<com.android.phone.EmergencyCallHelper: void startEmergencyCallFromAirplaneModeSequence (java.lang.String)> (1)
<com.android.phone.EmergencyCallHelper: void startRetryTimer ()> (2)
<com.android.phone.EmergencyCallHelper: void placeEmergencyCall ()> (2)
<com.android.phone.OutgoingCallBroadcaster: void processIntent (android.content.Intent)> (1)
<com.android.phone.SipCallOptionHandler$1: void run ()> (1)
<com.android.phone.DTMFTwelveKeyDialer: boolean onKeyDown (int,android.view.KeyEvent)> (1)
<com.android.phone.DTMFTwelveKeyDialer: void clearInCallScreenReference ()> (1)
<com.android.phone.InCallScreen: void closeDialpadInternal (boolean)> (6)
<com.android.phone.OtaUtils: void otaShowProgramFailureDialog ()> (1)
<com.android.phone.OtaUtils: void otaShowProgramSuccessDialog ()> (1)
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent (android.view.MotionEvent)> (1)
<com.android.phone.EmergencyCallHelper: void onServiceStateChanged (android.os.Message)> (2)
<com.android.phone.OutgoingCallBroadcaster: void onCreate (android.os.Bundle)> (1)
<com.android.phone.DTMFTwelveKeyDialerView: boolean dispatchKeyEvent (android.view.KeyEvent)> (3)
<com.android.phone.InCallScreen: void onDestroy ()> (1)
<com.android.phone.InCallScreen: void internalSwapCalls ()> (3)
<com.android.phone.InCallScreen: void onHoldClick ()> (1)
<com.android.phone.InCallScreen: void onOpenCloseDialpad ()> (1)
<com.android.phone.InCallScreen: boolean handleCallKey ()> (1)
<com.android.phone.InCallScreen: boolean onKeyDown (int,android.view.KeyEvent)> (2)
<com.android.vcard.VCardEntry$PostalData: void constructInsertOperation (java.util.List,int)> (1)
<android.provider.ContactsContract$ProfileSyncState: void set (android.content.ContentProviderClient,android.accounts.Account,byte[])> ()
<com.android.providers.contacts.LegacyApiSupport: int updateSettings (android.content.ContentValues)> (1)
<com.android.mms.data.Contact: android.net.Uri getUri ()> (6)
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForPhoneNumber (java.lang.String)> (2)
<com.android.mms.ui.ComposeMessageActivity: boolean onOptionsItemSelected (android.view.MenuItem)> (2)
<com.android.mms.ui.ComposeMessageActivity$RecipientsMenuClickListener: boolean onMenuItemClick (android.view.MenuItem)> (1)
<com.android.mms.ui.ConversationList: boolean onContextItemSelected (android.view.MenuItem)> (2)
<com.android.mms.ui.ConversationListItem: void updateAvatarView ()> (2)
<com.android.mms.ui.MessageListItem: void updateAvatarView (java.lang.String,boolean)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForPhoneNumber (java.lang.String)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean onOptionsItemSelected (android.view.MenuItem)> (2)
<com.android.mms.ui.ConversationListItem: void bind (android.content.Context,com.android.mms.data.Conversation)> (1)
<com.android.mms.ui.ConversationListItem: void updateFromView ()> (1)
<com.android.mms.ui.MessageListItem: void bindCommonMessage ()> (2)
<com.android.mms.ui.MessageListItem: void bindNotifInd ()> (1)
<com.android.mms.ui.ConversationListAdapter: void bindView (android.view.View,android.content.Context,android.database.Cursor)> (2)
<com.android.mms.ui.ConversationListItem: void access$000 (com.android.mms.ui.ConversationListItem)> (1)
<com.android.mms.ui.MessageListItem: void access$500 (com.android.mms.ui.MessageListItem)> (1)
<com.android.mms.ui.MessageListItem: void bind (com.android.mms.ui.MessageItem,boolean,int)> (1)
<com.android.mms.ui.ConversationListItem$1: void run ()> (1)
<com.android.mms.ui.MessageListItem$2: void onPduLoaded (com.android.mms.ui.MessageItem)> (1)
<com.android.mms.ui.MessageListAdapter: void bindView (android.view.View,android.content.Context,android.database.Cursor)> (2)
<com.android.mms.ui.MessageItem$PduLoadedCallback: void onPduLoaded (com.android.mms.ui.MessageItem)> (1)
<com.android.mms.ui.MessageItem$PduLoadedMessageItemCallback: void onItemLoaded (java.lang.Object,java.lang.Throwable)> (1)
<com.android.mms.util.ItemLoadedCallback: void onItemLoaded (java.lang.Object,java.lang.Throwable)> (5)
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded (com.android.mms.util.ThumbnailManager$ImageLoaded,java.lang.Throwable)> (1)
<com.android.mms.util.PduLoaderManager: com.android.mms.util.ItemLoadedFuture getPdu (android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)> (1)
<com.android.mms.util.PduLoaderManager$PduTask$1: void run ()> (1)
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail (android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)> (2)
<com.android.mms.util.ThumbnailManager$ThumbnailTask$1: void run ()> (1)
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded (java.lang.Object,java.lang.Throwable)> (1)
<com.android.mms.ui.MessageItem: void <init> (android.content.Context,java.lang.String,android.database.Cursor,com.android.mms.ui.MessageListAdapter$ColumnsMap,java.util.regex.Pattern)> (1)
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail (android.net.Uri,com.android.mms.util.ItemLoadedCallback)> (1)
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getVideoThumbnail (android.net.Uri,com.android.mms.util.ItemLoadedCallback)> (1)
<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem (java.lang.String,long,android.database.Cursor)> (4)
<com.android.mms.model.ImageModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap (com.android.mms.util.ItemLoadedCallback)> (2)
<com.android.mms.model.VideoModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap (com.android.mms.util.ItemLoadedCallback)> (1)
<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem getMessageItem (java.lang.String,long,boolean)> (1)
<com.android.mms.data.WorkingMessage: int setAttachment (int,android.net.Uri,boolean)> (4)
<com.android.mms.ui.MmsThumbnailPresenter: void presentImageThumbnail (com.android.mms.ui.SlideViewInterface,com.android.mms.model.ImageModel)> (1)
<com.android.mms.ui.MmsThumbnailPresenter: void presentVideoThumbnail (com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: com.android.mms.ui.MessageItem getMessageItem (java.lang.String,long,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity$30: void onResizeResult (com.google.android.mms.pdu.PduPart,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void addAudio (android.net.Uri)> (2)
<com.android.mms.ui.ComposeMessageActivity: void addImage (android.net.Uri,boolean)> (3)
<com.android.mms.ui.ComposeMessageActivity: void addVideo (android.net.Uri,boolean)> (3)
<com.android.mms.ui.MmsThumbnailPresenter: void presentFirstSlide (com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)> (1)
<com.android.mms.ui.MessageUtils$ResizeImageResultCallback: void onResizeResult (com.google.android.mms.pdu.PduPart,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAudio (android.net.Uri)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addImage (android.net.Uri,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$5600 (com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)> (2)
<com.android.mms.ui.ComposeMessageActivity: void addAttachment (java.lang.String,android.net.Uri,boolean)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addVideo (android.net.Uri,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$5700 (com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)> (2)
<com.android.mms.ui.MmsThumbnailPresenter: void present (com.android.mms.util.ItemLoadedCallback)> (1)
<com.android.mms.ui.MessageUtils$3$1: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivity$32: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5600 (com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAttachment (java.lang.String,android.net.Uri,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$5800 (com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)> (3)
<com.android.mms.ui.ComposeMessageActivity$33: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5700 (com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)> (1)
<com.android.mms.ui.Presenter: void present (com.android.mms.util.ItemLoadedCallback)> (3)
<com.android.mms.ui.ComposeMessageActivity$34: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivity$35: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5800 (com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)> (1)
<com.android.mms.ui.AttachmentEditor: boolean update (com.android.mms.data.WorkingMessage)> (2)
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View createViewFromResource (int,android.view.View,int)> (1)
<com.android.mms.ui.ComposeMessageActivity: void drawTopPanel (boolean)> (6)
<com.android.mms.ui.ComposeMessageActivity: void onRestart ()> (2)
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView (int,android.view.View,android.view.ViewGroup)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void drawTopPanel (boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$4500 (com.android.mms.ui.ComposeMessageActivity,boolean)> (3)
<com.android.mms.ui.ComposeMessageActivity: void editMmsMessageItem (com.android.mms.ui.MessageItem)> (2)
<com.android.mms.ui.ComposeMessageActivity: void initialize (android.os.Bundle,long)> (3)
<com.android.mms.ui.ComposeMessageActivity: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onRestart ()> (2)
<com.android.mms.ui.ComposeMessageActivity$20: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivity$40: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$4500 (com.android.mms.ui.ComposeMessageActivity,boolean)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMmsMessageItem (com.android.mms.ui.MessageItem)> (1)
<com.android.mms.ui.ComposeMessageActivity: void editMessageItem (com.android.mms.ui.MessageItem)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void initialize (android.os.Bundle,long)> (1)
<com.android.mms.ui.ComposeMessageActivity: void onCreate (android.os.Bundle)> (2)
<com.android.mms.ui.ComposeMessageActivity: void onNewIntent (android.content.Intent)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMessageItem (com.android.mms.ui.MessageItem)> (1)
<com.android.mms.ui.ComposeMessageActivity: void access$800 (com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)> (3)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onCreate (android.os.Bundle)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onNewIntent (android.content.Intent)> (2)
<com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener: boolean onMenuItemClick (android.view.MenuItem)> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$800 (com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)> (1)
<com.android.vcard.VCardEntry$NoteData: void constructInsertOperation (java.util.List,int)> (1)
<com.android.providers.contacts.ContactsProvider2$PipeMonitor: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void delete (long)> (1)
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void deleteParser (com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)> (1)
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commandsParser ()> (1)
<com.android.exchange.adapter.AbstractSyncParser: void commandsParser ()> (1)
<com.android.contacts.ContactSaveService: void deleteGroup (android.content.Intent)> (1)
<com.android.contacts.GroupMemberLoader: android.net.Uri createUri ()> (1)
<com.android.contacts.GroupMemberLoader: void <init> (android.content.Context,long,java.lang.String[])> (2)
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupDetailQuery (android.content.Context,long)> (1)
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupEditorQuery (android.content.Context,long)> (1)
<com.android.contacts.group.GroupDetailFragment$3: android.content.CursorLoader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupEditorFragment$3: android.content.CursorLoader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupDetailFragment$3: android.content.Loader onCreateLoader (int,android.os.Bundle)> (1)
<com.android.contacts.group.GroupEditorFragment$3: android.content.Loader onCreateLoader (int,android.os.Bundle)> (1)
<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build ()> (1)
<com.android.contacts.editor.AggregationSuggestionEngine: android.net.Uri buildAggregationSuggestionUri (com.android.contacts.model.EntityDelta$ValuesDelta)> (1)
<com.android.contacts.editor.AggregationSuggestionEngine: void onNameChange (com.android.contacts.model.EntityDelta$ValuesDelta)> (1)
<com.android.contacts.editor.ContactEditorFragment: void acquireAggregationSuggestions (android.content.Context,com.android.contacts.editor.RawContactEditorView)> (2)
<com.android.contacts.editor.ContactEditorFragment: void access$300 (com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.RawContactEditorView)> (1)
<com.android.contacts.editor.ContactEditorFragment: void bindEditors ()> (4)
<com.android.contacts.editor.ContactEditorFragment$2: void onRequest (int)> (1)
<com.android.contacts.editor.ContactEditorFragment: android.view.View onCreateView (android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> (1)
<com.android.contacts.editor.ContactEditorFragment: void access$2100 (com.android.contacts.editor.ContactEditorFragment)> (3)
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForExistingContact (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact (com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType)> (2)
<com.android.contacts.editor.Editor$EditorListener: void onRequest (int)> (3)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onPhotoSelected (android.graphics.Bitmap)> (1)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onRemovePictureChosen ()> (1)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onUseAsPrimaryChosen ()> (1)
<com.android.contacts.editor.ContactEditorFragment: void setData (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact (com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType)> (1)
<com.android.contacts.editor.ContactEditorFragment: void rebindEditorsForNewContact (com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)> (1)
<com.android.contacts.editor.LabeledEditorView: void notifyEditorListener ()> (5)
<com.android.contacts.editor.LabeledEditorView: void onOptionalFieldVisibilityChange ()> (3)
<com.android.contacts.editor.PhotoEditorView$1: void onClick (android.view.View)> (1)
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onPhotoSelected (android.graphics.Bitmap)> (1)
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onRemovePictureChosen ()> (2)
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onUseAsPrimaryChosen ()> (2)
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished (android.content.Loader,com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.ContactEditorFragment: void createContact (com.android.contacts.model.AccountWithDataSet)> (4)
<com.android.contacts.editor.ContactEditorFragment: void access$500 (com.android.contacts.editor.ContactEditorFragment,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)> (1)
<com.android.contacts.editor.EventFieldEditorView: void notifyEditorListener ()> (1)
<com.android.contacts.editor.LabeledEditorView: void onFieldChanged (java.lang.String,java.lang.String)> (3)
<com.android.contacts.editor.PhoneticNameEditorView: void notifyEditorListener ()> (1)
<com.android.contacts.editor.StructuredNameEditorView: void notifyEditorListener ()> (2)
<com.android.contacts.editor.TextFieldsEditorView: void notifyEditorListener ()> (1)
<com.android.contacts.editor.EventFieldEditorView: void onOptionalFieldVisibilityChange ()> (1)
<com.android.contacts.editor.PhoneticNameEditorView: void onOptionalFieldVisibilityChange ()> (1)
<com.android.contacts.editor.TextFieldsEditorView: void onOptionalFieldVisibilityChange ()> (3)
<com.android.contacts.detail.PhotoSelectionHandler: boolean handlePhotoActivityResult (int,int,android.content.Intent)> (2)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onRemovePictureChosen ()> (1)
<com.android.contacts.editor.PhotoActionPopup$Listener: void onRemovePictureChosen ()> (1)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onUseAsPrimaryChosen ()> (1)
<com.android.contacts.editor.PhotoActionPopup$Listener: void onUseAsPrimaryChosen ()> (1)
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.editor.ContactEditorFragment: void createContact ()> (1)
<com.android.contacts.editor.ContactEditorFragment: void onActivityCreated (android.os.Bundle)> (1)
<com.android.contacts.editor.ContactEditorFragment: void onActivityResult (int,int,android.content.Intent)> (1)
<com.android.contacts.editor.ContactEditorFragment: void selectAccountAndCreateContact ()> (1)
<com.android.contacts.editor.ContactEditorFragment$3$1: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.editor.Editor: void onFieldChanged (java.lang.String,java.lang.String)> ()
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged (java.lang.String,java.lang.String)> (4)
<com.android.contacts.editor.TextFieldsEditorView: void onFieldChanged (java.lang.String,java.lang.String)> (3)
<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged (java.lang.String,java.lang.String)> (2)
<com.android.contacts.editor.StructuredNameEditorView: void onOptionalFieldVisibilityChange ()> (2)
<com.android.contacts.editor.TextFieldsEditorView$1: void onClick (android.view.View)> (1)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: boolean handlePhotoActivityResult (int,int,android.content.Intent)> (2)
<com.android.contacts.editor.PhotoActionPopup$1: void onItemClick (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.editor.EventFieldEditorView$2: void onDateSet (com.android.contacts.datepicker.DatePicker,int,int,int)> (1)
<com.android.contacts.editor.EventFieldEditorView: void clearAllFields ()> ()
<com.android.contacts.editor.EventFieldEditorView: void onLabelRebuilt ()> (1)
<com.android.contacts.editor.PhoneticNameEditorView: void onFieldChanged (java.lang.String,java.lang.String)> (2)
<com.android.contacts.editor.TextFieldsEditorView$2: void afterTextChanged (android.text.Editable)> (1)
<com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener: void onDateSet (com.android.contacts.datepicker.DatePicker,int,int,int)> (1)
<com.android.contacts.editor.LabeledEditorView: void onLabelRebuilt ()> (5)
<com.android.contacts.datepicker.DatePickerDialog: void onClick (android.content.DialogInterface,int)> (1)
<com.android.contacts.editor.LabeledEditorView$3: void onClick (android.content.DialogInterface,int)> (1)
<com.android.contacts.editor.LabeledEditorView: void onTypeSelectionChange (int)> (5)
<com.android.contacts.editor.PhoneticNameEditorView: void onLabelRebuilt ()> (1)
<com.android.contacts.editor.StructuredNameEditorView: void onLabelRebuilt ()> (1)
<com.android.contacts.editor.TextFieldsEditorView: void onLabelRebuilt ()> (1)
<com.android.contacts.editor.EventFieldEditorView: void onTypeSelectionChange (int)> (1)
<com.android.contacts.editor.LabeledEditorView$1: void onItemSelected (android.widget.AdapterView,android.view.View,int,long)> (1)
<com.android.contacts.editor.PhoneticNameEditorView: void onTypeSelectionChange (int)> (1)
<com.android.contacts.editor.StructuredNameEditorView: void onTypeSelectionChange (int)> (1)
<com.android.contacts.editor.TextFieldsEditorView: void onTypeSelectionChange (int)> (1)
<com.android.ex.chips.BaseRecipientAdapter$DefaultFilter: android.widget.Filter$FilterResults performFiltering (java.lang.CharSequence)> (1)
<com.android.providers.contacts.LegacyApiSupport: long findFirstDataId (long,java.lang.String)> (2)
<com.android.contacts.vcard.ExportProcessor: void runInternal ()> (1)
<com.android.contacts.vcard.ExportProcessor: void run ()> (1)
<com.android.mms.ui.ComposeMessageActivity: void editSmsMessageItem (com.android.mms.ui.MessageItem)> (2)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editSmsMessageItem (com.android.mms.ui.MessageItem)> (1)
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Boolean doInBackground (java.lang.Void[])> (1)
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<android.widget.QuickContactBadge: void onClick (android.view.View)> (4)
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void onClick (android.view.View)> (1)
<com.android.mms.ui.QuickContactDivot: void onClick (android.view.View)> (1)
<com.android.quicksearchbox.ui.ContactBadge: void onClick (android.view.View)> (1)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendVCards (javax.obex.Operation,java.lang.String,boolean,java.lang.String,boolean)> (3)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendCallLogVcards (int,javax.obex.Operation,int,int,boolean)> (2)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookOneVcard (javax.obex.Operation,int,boolean,java.lang.String,int)> (1)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookVcards (javax.obex.Operation,int,int,boolean,java.lang.String)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullPhonebook (byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation,java.lang.String)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardEntry (byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.Operation,java.lang.String,java.lang.String)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int onGet (javax.obex.Operation)> ()
<com.android.mms.data.Conversation: void blockingMarkAllSmsMessagesAsSeen (android.content.Context)> (1)
<com.android.mms.data.Conversation: void access$800 (android.content.Context)> (1)
<com.android.mms.data.Conversation$3: void run ()> (1)
<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName (android.content.Context,java.lang.String)> (3)
<com.android.contacts.editor.StructuredNameEditorView: void rebuildStructuredName (com.android.contacts.model.EntityDelta$ValuesDelta)> (1)
<com.android.contacts.editor.StructuredNameEditorView: void switchFromFullNameToStructuredName ()> (1)
<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName (android.content.Context,java.lang.String,android.content.ContentValues)> (1)
<com.android.contacts.model.EntityModifier: void migrateStructuredName (android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.DataKind)> (1)
<com.android.contacts.model.EntityModifier: void migrateStateForNewContact (android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType,com.android.contacts.model.AccountType)> (1)
<com.android.vcard.VCardComposer: boolean init (java.lang.String,java.lang.String[])> (1)
<com.android.vcard.VCardComposer: boolean init ()> ()
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getContactsSize ()> (1)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getPhonebookSize (int)> (4)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardListing (byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: void <init> (android.os.Handler,android.content.Context)> (1)
<com.android.bluetooth.pbap.BluetoothPbapService: void startObexServerSession ()> (2)
<com.android.bluetooth.pbap.BluetoothPbapService: void access$500 (com.android.bluetooth.pbap.BluetoothPbapService)> (1)
<com.android.bluetooth.pbap.BluetoothPbapService: void parseIntent (android.content.Intent)> (1)
<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread: void run ()> (2)
<com.android.bluetooth.pbap.BluetoothPbapService: int onStartCommand (android.content.Intent,int,int)> (1)
<com.android.bluetooth.pbap.BluetoothPbapService: void startRfcommSocketListener ()> (2)
<com.android.bluetooth.pbap.BluetoothPbapService: void access$900 (com.android.bluetooth.pbap.BluetoothPbapService)> (2)
<com.android.bluetooth.pbap.BluetoothPbapService: void stopObexServerSession ()> (2)
<com.android.bluetooth.pbap.BluetoothPbapService: void onCreate ()> (1)
<com.android.bluetooth.pbap.BluetoothPbapService: void access$1100 (com.android.bluetooth.pbap.BluetoothPbapService)> (1)
<com.android.contacts.ContactLoader: void loadGroupMetaData (com.android.contacts.ContactLoader$Result)> (1)
<com.android.mms.transaction.SmsReceiverService: android.net.Uri storeMessage (android.content.Context,android.telephony.SmsMessage[],int)> (2)
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage (android.content.Context,android.telephony.SmsMessage[],int,java.lang.String)> (1)
<com.android.mms.transaction.SmsReceiverService: android.net.Uri replaceMessage (android.content.Context,android.telephony.SmsMessage[],int)> (1)
<com.android.mms.transaction.SmsReceiverService: void handleSmsReceived (android.content.Intent,int)> (1)
<com.android.mms.transaction.SmsReceiverService: void access$100 (com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)> (1)
<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)> ()
<com.android.contacts.activities.ConfirmAddDetailActivity: void startPhotoQuery (long,android.net.Uri)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$900 (com.android.contacts.activities.ConfirmAddDetailActivity,long,android.net.Uri)> (1)
<com.android.phone.CallerInfoCache: void refreshCacheEntry ()> (1)
<com.android.phone.CallerInfoCache: void access$400 (com.android.phone.CallerInfoCache)> (1)
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Void doInBackground (java.lang.Void[])> (1)
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.mms.transaction.MessageStatusService: android.telephony.SmsMessage updateMessageStatus (android.content.Context,android.net.Uri,byte[],java.lang.String)> (1)
<com.android.mms.transaction.MessageStatusService: void onHandleIntent (android.content.Intent)> (1)
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName (android.content.Context,java.util.Map)> (2)
<com.android.contacts.editor.StructuredNameEditorView: void rebuildFullName (com.android.contacts.model.EntityDelta$ValuesDelta)> (1)
<com.android.contacts.editor.StructuredNameEditorView: void switchFromStructuredNameToFullName ()> (1)
<com.android.contacts.editor.AggregationSuggestionEngine: void loadAggregationSuggestions (android.net.Uri)> (1)
<com.android.providers.contacts.ContactsProvider2: void outputRawContactsAsVCard (android.net.Uri,java.io.OutputStream,java.lang.String,java.lang.String[])> (1)
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFileLocal (android.net.Uri,java.lang.String)> (2)
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFile (android.net.Uri,java.lang.String)> (1)
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground ()> (1)
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: java.lang.Object loadInBackground ()> (1)
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void changeParser (com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)> (1)
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: void loadPhoto ()> (3)
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: void loadPhoto ()> (1)
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Void doInBackground (java.lang.Void[])> (3)
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: void loadPhoto ()> (1)
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Void doInBackground (java.lang.Void[])> (1)
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Object doInBackground (java.lang.Object[])> (3)
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Void doInBackground (java.lang.Void[])> (1)
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Object doInBackground (java.lang.Object[])> (2)
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Object doInBackground (java.lang.Object[])> (2)
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo (android.content.Context,java.lang.String)> (3)
<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId (android.content.Context,java.lang.String)> ()
<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo (android.content.Context,com.android.internal.telephony.Connection)> (2)
<com.android.phone.PhoneUtils: int placeCall (android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,boolean,android.net.Uri)> (4)
<com.android.phone.PhoneUtils$4: void onQueryComplete (int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (1)
<com.android.phone.CallNotifier: void onDisconnect (android.os.AsyncResult)> (1)
<com.android.phone.OtaUtils: int startNonInteractiveOtasp (android.content.Context)> (1)
<com.android.phone.InCallScreenShowActivation: void onCreate (android.os.Bundle)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity: void startDisambiguationQuery (java.lang.String)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$800 (com.android.contacts.activities.ConfirmAddDetailActivity,java.lang.String)> (1)
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName (android.content.Context,android.content.ContentValues)> (1)
<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)> (1)
<com.android.mms.ui.ManageSimMessages: void copyToPhoneMemory (android.database.Cursor)> (1)
<com.android.mms.ui.ManageSimMessages: boolean onContextItemSelected (android.view.MenuItem)> (1)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart (byte[],java.lang.String,int,int,int,long,int,boolean)> (3)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart (byte[],java.lang.String,int,int,int,long,int,boolean)> (2)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart (byte[],java.lang.String,int,int,int,long,int,boolean)> (1)
<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage (com.android.internal.telephony.SmsMessageBase)> (2)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu (byte[],int,java.lang.String)> (1)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchNormalMessage (com.android.internal.telephony.SmsMessageBase)> (2)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchNormalMessage (com.android.internal.telephony.SmsMessageBase)> (2)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage (com.android.internal.telephony.SmsMessageBase)> (1)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage (com.android.internal.telephony.SmsMessageBase)> (1)
<com.android.internal.telephony.SMSDispatcher: int dispatchMessage (com.android.internal.telephony.SmsMessageBase)> (3)
<com.android.mms.ui.ManageSimMessages: void deleteFromSim (android.database.Cursor)> (2)
<com.android.mms.ui.ManageSimMessages: void access$500 (com.android.mms.ui.ManageSimMessages,android.database.Cursor)> (1)
<com.android.mms.ui.ManageSimMessages: void deleteAllFromSim ()> (1)
<com.android.mms.ui.ManageSimMessages$2: void onClick (android.content.DialogInterface,int)> (1)
<com.android.mms.ui.ManageSimMessages: void access$600 (com.android.mms.ui.ManageSimMessages)> (1)
<com.android.mms.ui.ManageSimMessages$3: void onClick (android.content.DialogInterface,int)> (1)
<android.widget.QuickContactBadge: void assignContactFromPhone (java.lang.String,boolean)> (4)
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromPhone (java.lang.String,boolean)> (1)
<com.android.mms.ui.QuickContactDivot: void assignContactFromPhone (java.lang.String,boolean)> (2)
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromPhone (java.lang.String,boolean)> (1)
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary (android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)> (2)
<android.provider.Contacts$People: android.database.Cursor queryGroups (android.content.ContentResolver,long)> ()
<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)> ()
<com.android.mms.util.Recycler$SmsRecycler: void deleteMessagesForThread (android.content.Context,long,int)> (1)
<com.android.mms.util.Recycler: void deleteMessagesForThread (android.content.Context,long,int)> (2)
<com.android.mms.util.Recycler: void deleteOldMessages (android.content.Context)> (2)
<com.android.mms.util.Recycler: void deleteOldMessagesByThreadId (android.content.Context,long)> (2)
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessages (android.content.Context)> (1)
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessages (android.content.Context)> (1)
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesByThreadId (android.content.Context,long)> (2)
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessagesByThreadId (android.content.Context,long)> (3)
<com.android.mms.data.WorkingMessage: void sendMmsWorker (com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)> (1)
<com.android.mms.data.WorkingMessage: void sendSmsWorker (java.lang.String,java.lang.String,long)> (1)
<com.android.mms.data.WorkingMessage: void access$700 (com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)> (1)
<com.android.mms.data.WorkingMessage: void preSendSmsWorker (com.android.mms.data.Conversation,java.lang.String,java.lang.String)> (1)
<com.android.mms.data.WorkingMessage: void access$900 (com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)> (1)
<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris (android.os.Parcelable[])> (1)
<com.android.mms.data.Contact: java.util.List getByPhoneUris (android.os.Parcelable[])> (1)
<com.android.mms.data.ContactList: com.android.mms.data.ContactList blockingGetByUris (android.os.Parcelable[])> (1)
<com.android.mms.ui.ComposeMessageActivity$29: void run ()> (1)
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftSmsMessage (com.android.mms.data.Conversation)> (4)
<com.android.mms.data.WorkingMessage$4: void run ()> (1)
<com.android.mms.data.WorkingMessage: java.lang.String readDraftSmsMessage (com.android.mms.data.Conversation)> (1)
<com.android.mms.data.WorkingMessage: void discard ()> (5)
<com.android.mms.data.WorkingMessage: java.lang.String access$000 (com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)> (1)
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onDeleteComplete (int,java.lang.Object,int)> (2)
<com.android.mms.ui.ComposeMessageActivity$DiscardDraftListener: void onClick (android.content.DialogInterface,int)> (1)
<com.android.mms.ui.ComposeMessageActivity: void saveDraft (boolean)> (4)
<com.android.mms.data.WorkingMessage$1: android.util.Pair doInBackground (java.lang.Void[])> (1)
<com.android.mms.data.Conversation$ConversationQueryHandler: void onDeleteComplete (int,java.lang.Object,int)> (3)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void saveDraft (boolean)> (1)
<com.android.mms.ui.ComposeMessageActivity: void onMaxPendingMessagesReached ()> (2)
<com.android.mms.ui.ComposeMessageActivity: void onStop ()> (2)
<com.android.mms.data.WorkingMessage$1: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onDeleteComplete (int,java.lang.Object,int)> (2)
<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMaxPendingMessagesReached ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onMaxPendingMessagesReached ()> (1)
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onStop ()> (2)
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)> (1)
<android.provider.ContactsContract$SyncState: byte[] get (android.content.ContentProviderClient,android.accounts.Account)> ()
<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter: android.widget.Filter$FilterResults performFiltering (java.lang.CharSequence)> (1)
<com.android.contacts.list.ProfileAndContactsLoader: android.database.MatrixCursor loadProfile ()> (1)
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground ()> (2)
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground ()> (2)
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForPhoneNumber (java.lang.String)> (1)
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfo (com.android.mms.data.Contact)> (1)
<com.android.mms.data.Contact$ContactsCache: void updateContact (com.android.mms.data.Contact)> (1)
<com.android.mms.data.Contact$ContactsCache: void access$700 (com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)> (1)
<com.android.mms.data.Contact$ContactsCache$1: void run ()> (1)
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult processCpbrCommand ()> (2)
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult access$1000 (com.android.phone.BluetoothAtPhonebook)> (1)
<com.android.phone.BluetoothAtPhonebook: void handleAccessPermissionResult (android.content.Intent)> (1)
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState$2: void onReceive (android.content.Context,android.content.Intent)> (1)
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (16)
<android.bluetooth.AtParser: android.bluetooth.AtCommandResult process (java.lang.String)> (1)
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<android.bluetooth.HeadsetBase: void handleInput (java.lang.String)> (1)
<android.bluetooth.HeadsetBase$1: void run ()> (1)
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForSelf ()> (1)
<com.android.mms.ui.RecipientsAdapter: android.database.Cursor runQueryOnBackgroundThread (java.lang.CharSequence)> (1)
<android.provider.Contacts$Settings: java.lang.String getSetting (android.content.ContentResolver,java.lang.String,java.lang.String)> ()
<com.android.contacts.activities.ConfirmAddDetailActivity: void startExtraInfoQuery ()> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$1200 (com.android.contacts.activities.ConfirmAddDetailActivity)> (1)
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void queryPhotosForPreload ()> (1)
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void preloadPhotosInBackground ()> (1)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getContactNamesByNumber (java.lang.String)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int createList (int,int,java.lang.String,java.lang.StringBuilder,java.lang.String)> (1)
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int sendVcardListingXml (int,javax.obex.Operation,int,int,java.lang.String,java.lang.String)> (1)
<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground ()> (1)
<com.android.contacts.list.DirectoryListLoader: java.lang.Object loadInBackground ()> (1)
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForEmailAddress (java.lang.String)> (1)
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMemberFilter: android.widget.Filter$FilterResults performFiltering (java.lang.CharSequence)> (1)
<com.android.voicedialer.VoiceContact: java.util.List getVoiceContacts (android.app.Activity)> (1)
<com.android.voicedialer.CommandRecognizerEngine: void setupGrammar ()> (1)
<com.android.voicedialer.RecognizerEngine: void setupGrammar ()> (1)
<com.android.voicedialer.RecognizerEngine: void recognize (com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)> (2)
<com.android.voicedialer.CommandRecognizerEngine: void recognize (com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)> (2)
<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine: void recognize (com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)> (2)
<com.android.voicedialer.VoiceDialerActivity$3: void run ()> (1)
<com.android.voicedialer.VoiceDialerActivity$4: void run ()> (1)
<com.android.browser.AutofillHandler$LoadFromDb: void run ()> (2)
<com.android.browser.AutofillHandler: void asyncLoadFromDb ()> (1)
<com.android.browser.BrowserSettings: void <init> (android.content.Context)> (1)
<com.android.browser.BrowserSettings: void initialize (android.content.Context)> (1)
<com.android.browser.Browser: void onCreate ()> (1)
<com.android.mms.ui.ClassZeroActivity: android.net.Uri storeMessage (android.telephony.SmsMessage)> (2)
<com.android.mms.ui.ClassZeroActivity: android.net.Uri replaceMessage (android.telephony.SmsMessage)> (1)
<com.android.mms.ui.ClassZeroActivity: void saveMessage ()> (1)
<com.android.mms.ui.ClassZeroActivity: void access$200 (com.android.mms.ui.ClassZeroActivity)> (2)
<com.android.mms.ui.ClassZeroActivity$3: void onClick (android.content.DialogInterface,int)> (1)
<com.android.mms.data.WorkingMessage: void deleteDraftSmsMessage (long)> (2)
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri (android.content.ContentProviderClient,android.accounts.Account)> ()
<com.android.contacts.ContactLoader: void loadDirectoryMetaData (com.android.contacts.ContactLoader$Result)> (1)
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri (android.content.ContentProviderClient,android.accounts.Account)> ()
<com.android.vcard.VCardComposer: boolean initWithRawContactsEntityUri (android.net.Uri)> ()
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionaryAsync ()> (2)
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionaryAsync ()> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionaryAsync ()> (2)
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: void run ()> (2)
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionaryAsync ()> (1)
<com.android.inputmethod.latin.ExpandableDictionary: void startDictionaryLoadingTaskLocked ()> (9)
<com.android.inputmethod.latin.ContactsDictionary: void startDictionaryLoadingTaskLocked ()> (2)
<com.android.inputmethod.latin.ExpandableDictionary: boolean isValidWord (java.lang.CharSequence)> (4)
<com.android.inputmethod.latin.ExpandableDictionary: boolean reloadDictionaryIfRequired ()> (8)
<com.android.inputmethod.latin.ExpandableDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (5)
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionary ()> (6)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void startDictionaryLoadingTaskLocked ()> (2)
<com.android.inputmethod.latin.UserDictionary: void startDictionaryLoadingTaskLocked ()> (1)
<com.android.inputmethod.latin.UserHistoryDictionary: void startDictionaryLoadingTaskLocked ()> (1)
<com.android.inputmethod.latin.WhitelistDictionary: void startDictionaryLoadingTaskLocked ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void startDictionaryLoadingTaskLocked ()> (2)
<com.android.inputmethod.latin.ContactsDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.Dictionary: boolean isValidWord (java.lang.CharSequence)> (3)
<com.android.inputmethod.latin.UserDictionary: boolean isValidWord (java.lang.CharSequence)> (3)
<com.android.inputmethod.latin.WhitelistDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.ContactsDictionary: boolean reloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ExpandableDictionary: void blockingReloadDictionaryIfRequired ()> (6)
<com.android.inputmethod.latin.ExpandableDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (6)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean reloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean reloadDictionaryIfRequired ()> (2)
<com.android.inputmethod.latin.UserDictionary: boolean reloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.UserHistoryDictionary: boolean reloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.WhitelistDictionary: boolean reloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ContactsDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.Dictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (3)
<com.android.inputmethod.latin.UserDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.UserHistoryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.WhitelistDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionary ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.UserDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.UserHistoryDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionary ()> (1)
<com.android.inputmethod.latin.AutoCorrection: boolean isValidWord (java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)> (2)
<com.android.inputmethod.latin.DictionaryCollection: boolean isValidWord (java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions (android.view.textservice.TextInfo,java.lang.String,int)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean isValidWord (java.lang.CharSequence)> (3)
<com.android.inputmethod.latin.ContactsDictionary: void blockingReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void blockingReloadDictionaryIfRequired ()> (3)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void blockingReloadDictionaryIfRequired ()> (4)
<com.android.inputmethod.latin.UserDictionary: void blockingReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.UserHistoryDictionary: void blockingReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.WhitelistDictionary: void blockingReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ContactsDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (3)
<com.android.inputmethod.latin.Dictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (3)
<com.android.inputmethod.latin.UserDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.UserHistoryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.WhitelistDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.DictionaryCollection: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (1)
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestedWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)> (1)
<com.android.inputmethod.latin.ContactsDictionary: void <init> (android.content.Context,int)> (3)
<com.android.inputmethod.latin.UserDictionary: void <init> (android.content.Context,java.lang.String,boolean)> (2)
<com.android.inputmethod.latin.UserHistoryDictionary: void <init> (android.content.Context,java.lang.String,int,android.content.SharedPreferences)> (1)
<com.android.inputmethod.latin.AutoCorrection: boolean allowsToBeAutoCorrected (java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)> (2)
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManuallyWhileInBatchEdit (int,java.lang.CharSequence,int,int,android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions (android.view.textservice.TextInfo,int)> (1)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple (android.view.textservice.TextInfo[],int,boolean)> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (3)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (3)
<com.android.inputmethod.latin.DictionaryCollection: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (1)
<com.android.inputmethod.latin.Suggest: void getAllBigrams (java.lang.CharSequence,com.android.inputmethod.latin.WordComposer)> (2)
<com.android.inputmethod.latin.LatinIME: void updateSuggestions ()> (5)
<com.android.inputmethod.latin.ExpandableDictionary: void <init> (android.content.Context,int)> (8)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void <init> (android.content.Context,int)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void <init> (android.content.Context)> ()
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init> (android.content.Context,java.lang.String,boolean)> (2)
<com.android.inputmethod.latin.UserDictionary: void <init> (android.content.Context,java.lang.String)> ()
<com.android.inputmethod.latin.UserHistoryDictionary: com.android.inputmethod.latin.UserHistoryDictionary getInstance (android.content.Context,java.lang.String,int,android.content.SharedPreferences)> (1)
<com.android.inputmethod.latin.AutoCorrection: boolean hasAutoCorrectionForConsideredWord (java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManually (int,java.lang.CharSequence,int,int)> (1)
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getBigramPredictions (java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.LatinIME: void commitCurrentAutoCorrection (int,android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.LatinIME: void commitTyped (android.view.inputmethod.InputConnection,int)> (4)
<com.android.inputmethod.latin.LatinIME: void resetEntireInputState ()> (1)
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateSuggestions ()> (10)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init> (android.content.Context,int)> (2)
<com.android.inputmethod.latin.UserDictionary: void <init> (android.content.Context,int)> (1)
<com.android.inputmethod.latin.UserHistoryDictionary: void <init> (android.content.Context,int)> (1)
<com.android.inputmethod.latin.WhitelistDictionary: void <init> (android.content.Context,int)> (1)
<com.android.inputmethod.latin.WhitelistDictionary: void <init> (android.content.Context,java.util.Locale)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init> (android.content.Context,java.lang.String)> (1)
<com.android.inputmethod.latin.LatinIME: void initSuggest ()> (2)
<com.android.inputmethod.latin.AutoCorrection: java.lang.CharSequence computeAutoCorrectionWord (java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence,float,java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: void pickSuggestionManually (int,java.lang.CharSequence,int,int)> (2)
<com.android.inputmethod.latin.LatinIME: void updateBigramPredictions ()> (3)
<com.android.inputmethod.latin.LatinIME: boolean handleSeparator (int,int,int,int)> (1)
<com.android.inputmethod.latin.LatinIME: void handleClose ()> (1)
<com.android.inputmethod.latin.LatinIME: void onConfigurationChanged (android.content.res.Configuration)> (2)
<com.android.inputmethod.latin.LatinIME: void onTextInput (java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.LatinIME: void onUpdateSelection (int,int,int,int,int,int)> (1)
<com.android.inputmethod.latin.LatinIME: boolean addWordToDictionary (java.lang.String)> (1)
<com.android.inputmethod.latin.LatinIME: void handleBackspaceWhileInBatchEdit (int,android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.LatinIME: void handleCharacterWhileInBatchEdit (int,int,int,int,android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.LatinIME: void onRefreshKeyboard ()> (1)
<com.android.inputmethod.latin.LatinIME: void onStartInputViewInternal (android.view.inputmethod.EditorInfo,boolean)> (1)
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursor (android.view.inputmethod.InputConnection,java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.LatinIME: void revertCommit (android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.LatinIME: void switchToKeyboardView ()> ()
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictAndProximity createDictAndProximity (java.util.Locale)> (1)
<com.android.inputmethod.latin.Suggest: void initWhitelistAndAutocorrectAndPool (android.content.Context,java.util.Locale)> (2)
<com.android.inputmethod.latin.LatinIME: void onCreate ()> (2)
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: boolean onCustomRequest (int)> (1)
<com.android.inputmethod.latin.suggestions.SuggestionsView: void onClick (android.view.View)> (1)
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateBigramPredictions ()> (4)
<com.android.inputmethod.latin.LatinIME: void onCodeInput (int,int,int)> (2)
<com.android.inputmethod.latin.LatinIME: void launchSettingsClass (java.lang.Class)> (2)
<com.android.inputmethod.keyboard.KeyboardActionListener: void onTextInput (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: boolean addWordToDictionary (java.lang.String)> (1)
<com.android.inputmethod.latin.LatinIME: void handleBackspace (int)> (1)
<com.android.inputmethod.latin.LatinIME: void handleCharacter (int,int,int,int)> (1)
<com.android.inputmethod.latin.SubtypeSwitcher: void updateSubtype (android.view.inputmethod.InputMethodSubtype)> (3)
<com.android.inputmethod.latin.LatinIME: void access$300 (com.android.inputmethod.latin.LatinIME,android.view.inputmethod.EditorInfo,boolean)> (1)
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursorIfAtEndOfWord (android.view.inputmethod.InputConnection)> (1)
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity take ()> (2)
<com.android.inputmethod.latin.Suggest: void <init> (android.content.Context,java.io.File,long,long,java.util.Locale)> ()
<com.android.inputmethod.latin.Suggest: void initAsynchronously (android.content.Context,java.util.Locale)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: boolean onCustomRequest (int)> (3)
<com.android.inputmethod.keyboard.KeyboardActionListener: void onCodeInput (int,int,int)> (3)
<com.android.inputmethod.latin.LatinIME: void launchDebugSettings ()> ()
<com.android.inputmethod.latin.LatinIME: void launchSettings ()> (1)
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onTextInput (java.lang.CharSequence)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void callListenerOnCodeInput (com.android.inputmethod.keyboard.Key,int,int,int)> (1)
<com.android.inputmethod.latin.suggestions.SuggestionsView: void addToDictionary (java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.LatinIME: void onCurrentInputMethodSubtypeChanged (android.view.inputmethod.InputMethodSubtype)> (1)
<com.android.inputmethod.latin.SubtypeSwitcher: void updateAllParameters ()> (2)
<com.android.inputmethod.latin.SubtypeSwitcher: void updateEnabledSubtypes ()> (1)
<com.android.inputmethod.latin.LatinIME$UIHandler: void onStartInputView (android.view.inputmethod.EditorInfo,boolean)> (1)
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity takeOrGetNull ()> (1)
<com.android.inputmethod.latin.spellcheck.DictionaryPool: java.lang.Object take ()> (1)
<com.android.inputmethod.latin.Suggest: void <init> (android.content.Context,java.util.Locale)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener: boolean onCustomRequest (int)> (2)
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: boolean onCustomRequest (int)> (1)
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: boolean onCustomRequest (int)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView: void invokeCodeInput (int)> (1)
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onCodeInput (int,int,int)> (1)
<com.android.inputmethod.latin.LatinIME: void access$700 (com.android.inputmethod.latin.LatinIME)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onTextInput (java.lang.CharSequence)> (3)
<com.android.inputmethod.keyboard.PointerTracker: void detectAndSendKey (com.android.inputmethod.keyboard.Key,int,int)> (2)
<com.android.inputmethod.latin.SubtypeSwitcher: void init (com.android.inputmethod.latin.LatinIME)> (1)
<com.android.inputmethod.latin.SubtypeSwitcher: void onConfigurationChanged (android.content.res.Configuration)> (1)
<com.android.inputmethod.latin.SubtypeSwitcher: void updateParametersOnStartInputView ()> (2)
<com.android.inputmethod.latin.LatinIME: void onStartInputView (android.view.inputmethod.EditorInfo,boolean)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean invokeCustomRequest (int)> (1)
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onCodeInput (int,int,int)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onLongPress (com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onCodeInput (int,int,int)> (2)
<com.android.inputmethod.latin.LatinIME$3: void onClick (android.content.DialogInterface,int)> (1)
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onTextInput (java.lang.CharSequence)> (1)
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onTextInput (java.lang.CharSequence)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void onRegisterKey (com.android.inputmethod.keyboard.Key)> (3)
<com.android.inputmethod.keyboard.PointerTracker: void onUpEventInternal ()> (3)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysKeyboardIfRequired (com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onCodeInput (int,int,int)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void startRepeatKey (com.android.inputmethod.keyboard.Key)> (2)
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer (com.android.inputmethod.keyboard.PointerTracker,long)> (3)
<com.android.inputmethod.keyboard.PointerTracker: void onMoveEvent (int,int,long)> (2)
<com.android.inputmethod.keyboard.PointerTracker: void onPhantomUpEvent (int,int,long)> (2)
<com.android.inputmethod.keyboard.PointerTracker: void onUpEvent (int,int,long)> (2)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean access$000 (com.android.inputmethod.keyboard.LatinKeyboardView,com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)> (3)
<com.android.inputmethod.keyboard.PointerTracker: void onDownEventInternal (int,int,long)> (2)
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer (com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean processMotionEvent (android.view.MotionEvent)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void processMotionEvent (int,int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)> (3)
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersExcept (com.android.inputmethod.keyboard.PointerTracker,long)> (3)
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersOlderThan (com.android.inputmethod.keyboard.PointerTracker,long)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer (int)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer (com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void onDownEvent (int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)> (3)
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startKeyRepeatTimer (com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler$ProcessMotionEvent: boolean processMotionEvent (android.view.MotionEvent)> (2)
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: boolean onTouchEvent (android.view.MotionEvent)> (2)
<com.android.inputmethod.latin.suggestions.SuggestionsView: boolean dispatchTouchEvent (android.view.MotionEvent)> (3)
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointers (long)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void onCancelEvent (int,int,long)> (1)
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer (int)> (1)
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer (com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void onShowMoreKeysPanel (int,int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)> (2)
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean handleSuddenJumping (android.view.MotionEvent)> (1)
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean onTouchEvent (android.view.MotionEvent)> (1)
<com.android.inputmethod.keyboard.KeyboardView: boolean onTouchEvent (android.view.MotionEvent)> (2)
<com.android.inputmethod.keyboard.KeyboardSwitcher: void startLongPressTimer (int)> (1)
<com.android.inputmethod.keyboard.PointerTracker: void startLongPressTimer (com.android.inputmethod.keyboard.Key)> (2)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysPanel (com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onTouchEvent (android.view.MotionEvent)> (2)
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: void simulateKeyPress (com.android.inputmethod.keyboard.Key)> (2)
<com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions: void startLongPressTimer (int)> (1)
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performActionForKey (com.android.inputmethod.keyboard.Key,int,android.os.Bundle)> (2)
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean dispatchHoverEvent (android.view.MotionEvent,com.android.inputmethod.keyboard.PointerTracker)> (1)
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressShift ()> (1)
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performAction (int,int,android.os.Bundle)> (1)
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onHoverKey (com.android.inputmethod.keyboard.Key,android.view.MotionEvent)> (2)
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean dispatchHoverEvent (android.view.MotionEvent)> (2)
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressKey (int,boolean,int)> (1)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction (int,int,android.os.Bundle)> (1)
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onTransitionKey (com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.Key,android.view.MotionEvent)> (1)
<com.android.inputmethod.keyboard.KeyboardView: boolean dispatchHoverEvent (android.view.MotionEvent)> (1)
<com.android.inputmethod.keyboard.KeyboardSwitcher: void onPressKey (int)> (1)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: boolean performAction (int,int,android.os.Bundle)> (1)
<com.android.inputmethod.latin.LatinIME: void onPressKey (int)> (1)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: boolean performAction (int,int,android.os.Bundle)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener: void onPressKey (int)> (3)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: boolean performAction (int,int,android.os.Bundle)> (1)
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onPressKey (int)> (1)
<com.android.inputmethod.keyboard.PointerTracker: boolean callListenerOnPressAndCheckKeyboardLayoutChange (com.android.inputmethod.keyboard.Key)> (2)
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onPressKey (int)> (1)
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onPressKey (int)> (2)
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onPressKey (int)> (1)
<com.android.contacts.model.EntityModifier: void parseStructuredNameExtra (android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)> (1)
<com.android.contacts.model.EntityModifier: void parseExtras (android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)> (3)
<com.android.contacts.activities.ConfirmAddDetailActivity: void setEntityDeltaList (com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras (android.os.Bundle)> (2)
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$300 (com.android.contacts.activities.ConfirmAddDetailActivity,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute (com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute (java.lang.Object)> (1)
<com.android.contacts.ContactLoader: void loadStreamItems (com.android.contacts.ContactLoader$Result)> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean hasContentChanged ()> (2)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean hasContentChanged ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean hasContentChanged ()> (2)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryInternal ()> (6)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryInternal ()> (1)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void access$500 (com.android.inputmethod.latin.ExpandableBinaryDictionary)> (5)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryIfRequired ()> (4)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryInternal ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryInternal ()> (1)
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryInternal ()> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void access$500 (com.android.inputmethod.latin.ExpandableBinaryDictionary)> (1)
<com.android.inputmethod.latin.ExpandableBinaryDictionary$AsyncReloadDictionaryTask: void run ()> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void access$500 (com.android.inputmethod.latin.ExpandableBinaryDictionary)> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void access$500 (com.android.inputmethod.latin.ExpandableBinaryDictionary)> (1)
<com.android.inputmethod.latin.UserBinaryDictionary: void access$500 (com.android.inputmethod.latin.ExpandableBinaryDictionary)> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryIfRequired ()> (3)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryIfRequired ()> (3)
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncReloadDictionaryIfRequired ()> (8)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void asyncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean isValidWord (java.lang.CharSequence)> (3)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (4)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (3)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionary ()> (4)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void asyncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void asyncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.UserBinaryDictionary: void asyncReloadDictionaryIfRequired ()> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.UserBinaryDictionary: boolean isValidWord (java.lang.CharSequence)> (2)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (3)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.UserBinaryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (2)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.UserBinaryDictionary: void getWords (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)> (2)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionary ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void loadDictionary ()> (1)
<com.android.inputmethod.latin.UserBinaryDictionary: void loadDictionary ()> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getBigrams (com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)> (3)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void <init> (android.content.Context,int,java.util.Locale)> (3)
<com.android.inputmethod.latin.UserBinaryDictionary: void <init> (android.content.Context,java.lang.String,boolean)> (2)
<com.android.inputmethod.latin.LatinIME: void resetContactsDictionary (com.android.inputmethod.latin.Dictionary)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void <init> (android.content.Context,int,java.util.Locale)> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void <init> (android.content.Context,java.util.Locale)> (2)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void <init> (android.content.Context,java.lang.String,boolean)> (3)
<com.android.inputmethod.latin.UserBinaryDictionary: void <init> (android.content.Context,java.lang.String)> (1)
<com.android.inputmethod.latin.LatinIME: void loadSettings ()> (3)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void startUsingContactsDictionaryLocked ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void <init> (android.content.Context,java.lang.String)> (1)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onSharedPreferenceChanged (android.content.SharedPreferences,java.lang.String)> (2)
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onCreate ()> (1)
<com.android.exchange.ContactsSyncAdapterService: void performSync (android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> (1)
<com.android.exchange.ContactsSyncAdapterService: void access$000 (android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> (1)
<com.android.exchange.ContactsSyncAdapterService$SyncAdapterImpl: void onPerformSync (android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> (1)
<com.android.calendar.event.AttendeesView: void addOneAttendee (com.android.calendar.CalendarEventModel$Attendee)> (3)
<com.android.calendar.event.AttendeesView: void addAttendees (java.lang.String)> ()
<com.android.calendar.event.AttendeesView: void addAttendees (java.util.ArrayList)> (1)
<com.android.calendar.event.AttendeesView: void addAttendees (java.util.HashMap)> ()
<com.android.calendar.EventInfoFragment: void updateAttendees (android.view.View)> (1)
<com.android.calendar.EventInfoFragment: void initAttendeesCursor (android.view.View)> (1)
<com.android.calendar.EventInfoFragment: void access$1900 (com.android.calendar.EventInfoFragment,android.view.View)> (1)
<com.android.calendar.EventInfoFragment$QueryHandler: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.calendar.AsyncQueryService: void onQueryComplete (int,java.lang.Object,android.database.Cursor)> (1)
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery (int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)> (1)
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo (android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)> (7)
<com.android.phone.CallCard: void displaySecondaryCallStatus (com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)> (4)
<com.android.phone.CallNotifier: void showMissedCallNotification (com.android.internal.telephony.Connection,long)> (2)
<com.android.phone.CallNotifier: void startIncomingCallQuery (com.android.internal.telephony.Connection)> (1)
<com.android.phone.ManageConferenceUtils: void updateManageConferenceRow (int,com.android.internal.telephony.Connection,boolean)> (1)
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo (android.content.Context,com.android.internal.telephony.Call,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)> (2)
<com.android.phone.CallCard: void updateAlreadyDisconnected (com.android.internal.telephony.CallManager)> (1)
<com.android.phone.CallNotifier: void onCdmaCallWaitingReject ()> (3)
<com.android.phone.CallNotifier: void onNewRingingConnection (android.os.AsyncResult)> (1)
<com.android.phone.ManageConferenceUtils: void updateManageConferencePanel (java.util.List)> (2)
<com.android.phone.NotificationMgr: void updateInCallNotification (boolean)> (2)
<com.android.phone.CallNotifier: void sendCdmaCallWaitingReject ()> (1)
<com.android.phone.InCallScreen: void setInCallScreenMode (com.android.phone.InCallUiState$InCallScreenMode)> (12)
<com.android.phone.NotificationMgr: void updateInCallNotification ()> (8)
<com.android.phone.NotificationMgr: void updateNotificationAndLaunchIncomingCallUi ()> (1)
<com.android.phone.PhoneUtils: boolean hangupRingingCall (com.android.internal.telephony.Call)> (8)
<com.android.phone.InCallScreen: boolean checkOtaspStateOnResume ()> (1)
<com.android.phone.InCallScreen: void endInCallScreenSession (boolean)> (3)
<com.android.phone.InCallScreen: void internalResolveIntent (android.content.Intent)> (2)
<com.android.phone.InCallScreen: void resetInCallScreenMode ()> (2)
<com.android.phone.InCallScreen: void onPause ()> (1)
<com.android.phone.NotificationMgr: void onQueryComplete (int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (1)
<com.android.phone.NotificationMgr: void updateNotificationsAtStartup ()> (1)
<com.android.phone.CallNotifier: void showIncomingCall ()> (5)
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.CallNotifier: void onCustomRingtoneQueryTimeout (java.lang.String)> (2)
<com.android.phone.CallNotifier: void onQueryComplete (int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (2)
<com.android.phone.InCallScreen: void hangupRingingCall ()> (2)
<com.android.phone.PhoneUtils: boolean hangup (com.android.internal.telephony.CallManager)> (7)
<com.android.phone.PhoneUtils: boolean hangupRingingAndActive (com.android.internal.telephony.Phone)> (2)
<com.android.phone.InCallScreen: void bailOutAfterErrorDialog ()> (1)
<com.android.phone.InCallScreen: void endInCallScreenSession ()> (8)
<com.android.phone.InCallScreen: void onCreate (android.os.Bundle)> (1)
<com.android.phone.InCallScreen: void onNewIntent (android.content.Intent)> (1)
<com.android.phone.PhoneApp: void clearInCallScreenMode ()> (2)
<com.android.phone.NotificationMgr: com.android.phone.NotificationMgr init (com.android.phone.PhoneApp)> (1)
<com.android.phone.CallNotifier: void onCustomRingQueryComplete ()> (2)
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleActionCommand ()> (19)
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult headsetButtonPress ()> (2)
<com.android.phone.InCallScreen: void internalHangup ()> (1)
<com.android.phone.PhoneApp$NotificationBroadcastReceiver: void onReceive (android.content.Context,android.content.Intent)> (1)
<com.android.phone.PhoneUtils: boolean handleHeadsetHook (com.android.internal.telephony.Phone,android.view.KeyEvent)> (1)
<com.android.phone.InCallScreen: void access$2300 (com.android.phone.InCallScreen)> (2)
<com.android.phone.InCallScreen: void addVoiceMailNumberPanel ()> (1)
<com.android.phone.InCallScreen: void delayedCleanupAfterDisconnect ()> (2)
<com.android.phone.InCallScreen: void dontAddVoiceMailNumber ()> (1)
<com.android.phone.InCallScreen: void onMMICancel ()> (1)
<com.android.phone.InCallScreen: void onMMIComplete (com.android.internal.telephony.MmiCode)> (1)
<com.android.phone.OtaUtils: void otaShowHome ()> (2)
<com.android.phone.CallNotifier: boolean ignoreAllIncomingCalls (com.android.internal.telephony.Phone)> (1)
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void doReceive (android.content.Context,android.content.Intent)> (1)
<com.android.phone.PhoneApp: void onCreate ()> (1)
<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleActionCommand ()> (1)
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.InCallScreen$12: void onClick (android.content.DialogInterface,int)> (1)
<com.android.phone.InCallScreen$13: void onCancel (android.content.DialogInterface)> (1)
<com.android.phone.InCallScreen: void access$1100 (com.android.phone.InCallScreen)> (1)
<com.android.phone.InCallScreen: void access$1300 (com.android.phone.InCallScreen)> (5)
<com.android.phone.InCallScreen: void access$1200 (com.android.phone.InCallScreen)> (1)
<com.android.phone.InCallScreen: void access$800 (com.android.phone.InCallScreen)> (1)
<com.android.phone.InCallScreen: void access$900 (com.android.phone.InCallScreen,com.android.internal.telephony.MmiCode)> (1)
<com.android.phone.OtaUtils: void onClickOtaActivateNextButton ()> (1)
<com.android.phone.OtaUtils: void otaShowActivateScreen ()> (4)
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void onReceive (android.content.Context,android.content.Intent)> (1)
<com.android.phone.InCallScreen$14: void onClick (android.content.DialogInterface,int)> (1)
<com.android.phone.InCallScreen$15: void onCancel (android.content.DialogInterface)> (1)
<com.android.phone.OtaUtils: void onClickOtaTryAgainButton ()> (1)
<com.android.phone.OtaUtils: void onOtaCloseFailureNotice ()> (6)
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNameList (int)> (1)
<com.android.contacts.model.AccountWithDataSet: boolean hasData (android.content.Context)> (2)
<com.android.contacts.list.AccountFilterActivity: java.util.List loadAccountFilters (android.content.Context)> (1)
<com.android.contacts.list.AccountFilterActivity: java.util.List access$100 (android.content.Context)> (1)
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.util.List loadInBackground ()> (1)
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.lang.Object loadInBackground ()> (1)
<com.android.contacts.calllog.CallLogAdapter: java.lang.String getBetterNumberFromContacts (java.lang.String,java.lang.String)> (1)
<com.android.contacts.calllog.CallLogFragment: void callSelectedEntry ()> ()
<android.provider.ContactsContract$ProfileSyncState: byte[] get (android.content.ContentProviderClient,android.accounts.Account)> ()
<com.android.phone.BluetoothAtPhonebook: boolean queryPhonebook (java.lang.String,com.android.phone.BluetoothAtPhonebook$PhonebookResult)> (1)
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult getPhonebookResult (java.lang.String,boolean)> (2)
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult access$500 (com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)> (3)
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleSetCommand (java.lang.Object[])> (1)
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleReadCommand ()> (21)
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleTestCommand ()> (22)
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleReadCommand ()> (1)
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleTestCommand ()> (1)
<com.android.contacts.ContactsUtils: int getThumbnailSize (android.content.Context)> (2)
<com.android.contacts.activities.AttachPhotoActivity: void saveContact (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.PhotoEditorView: void setPhotoBitmap (android.graphics.Bitmap)> (1)
<com.android.contacts.activities.AttachPhotoActivity: void access$000 (com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.BaseRawContactEditorView: void setPhotoBitmap (android.graphics.Bitmap)> (5)
<com.android.contacts.activities.AttachPhotoActivity$1: void onContactLoaded (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.ContactEditorFragment: void setPhoto (long,android.graphics.Bitmap,java.lang.String)> (1)
<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap (android.graphics.Bitmap)> (1)
<com.android.contacts.editor.RawContactReadOnlyEditorView: void setPhotoBitmap (android.graphics.Bitmap)> (1)
<com.android.contacts.activities.AttachPhotoActivity$Listener: void onContactLoaded (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.editor.ContactEditorFragment: void access$2300 (com.android.contacts.editor.ContactEditorFragment,long,android.graphics.Bitmap,java.lang.String)> (1)
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete (android.content.Loader,com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete (android.content.Loader,java.lang.Object)> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: com.android.contacts.model.EntityDeltaList doInBackground (android.content.Intent[])> (1)
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.interactions.ImportExportDialogFragment: void doShareVisibleContacts ()> (1)
<com.android.contacts.interactions.ImportExportDialogFragment: void access$100 (com.android.contacts.interactions.ImportExportDialogFragment)> (1)
<com.android.contacts.interactions.ImportExportDialogFragment$2: void onClick (android.content.DialogInterface,int)> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionaryAsync ()> (2)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionaryAsync ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionaryAsync ()> (2)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void generateBinaryDictionary ()> (5)
<com.android.inputmethod.latin.ContactsBinaryDictionary: void generateBinaryDictionary ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void generateBinaryDictionary ()> (1)
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void generateBinaryDictionary ()> (1)
<com.android.inputmethod.latin.UserBinaryDictionary: void generateBinaryDictionary ()> (1)
<android.widget.QuickContactBadge: void assignContactFromEmail (java.lang.String,boolean)> (4)
<com.android.calendar.event.AttendeesView: android.view.View updateAttendeeView (com.android.calendar.event.EditEventHelper$AttendeeItem)> (3)
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromEmail (java.lang.String,boolean)> (1)
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail (java.lang.String,boolean)> (2)
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromEmail (java.lang.String,boolean)> (1)
<com.android.calendar.event.AttendeesView: android.view.View access$100 (com.android.calendar.event.AttendeesView,com.android.calendar.event.EditEventHelper$AttendeeItem)> (2)
<com.android.calendar.event.AttendeesView: android.view.View constructAttendeeView (com.android.calendar.event.EditEventHelper$AttendeeItem)> (1)
<com.android.calendar.event.AttendeesView: void onClick (android.view.View)> (1)
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail (java.lang.String)> (1)
<com.android.calendar.event.AttendeesView$PresenceQueryHandler$1: void run ()> (1)
<com.android.mms.ui.Divot: void assignContactFromEmail (java.lang.String)> ()
<com.android.contacts.model.AccountTypeWithDataSet: boolean hasData (android.content.Context)> (1)
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map findUsableInvitableAccountTypes (android.content.Context)> (2)
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map access$400 (com.android.contacts.model.AccountTypeManagerImpl,android.content.Context)> (1)
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes ()> (1)
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.util.Map doInBackground (java.lang.Void[])> (1)
<com.android.contacts.model.AccountTypeManager: java.util.Map getUsableInvitableAccountTypes ()> (1)
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.lang.Object doInBackground (java.lang.Object[])> (1)
<com.android.contacts.ContactLoader: void loadInvitableAccountTypes (com.android.contacts.ContactLoader$Result)> (1)
<com.android.contacts.detail.PhotoSelectionHandler: int getPhotoPickSize ()> (3)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: int getPhotoPickSize ()> (1)
<com.android.contacts.detail.PhotoSelectionHandler: void <init> (android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)> (4)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: int getPhotoPickSize ()> (1)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init> (android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init> (com.android.contacts.activities.PhotoSelectionActivity,android.content.Context,android.view.View,int,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void <init> (android.content.Context,android.view.View,int,boolean,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void <init> (com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.BaseRawContactEditorView,int,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init> (com.android.contacts.activities.PhotoSelectionActivity,android.content.Context,android.view.View,int,com.android.contacts.model.EntityDeltaList,com.android.contacts.activities.PhotoSelectionActivity$1)> (1)
<com.android.contacts.editor.ContactEditorFragment: void bindPhotoHandler (com.android.contacts.editor.BaseRawContactEditorView,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDeltaList)> (1)
<com.android.contacts.activities.PhotoSelectionActivity: void attachPhotoHandler ()> (1)
<com.android.contacts.activities.PhotoSelectionActivity: void displayPhoto ()> (1)
<com.android.contacts.activities.PhotoSelectionActivity: void access$000 (com.android.contacts.activities.PhotoSelectionActivity)> (1)
<com.android.contacts.activities.PhotoSelectionActivity$2: void run ()> (1)
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: android.widget.Filter$FilterResults performFiltering (java.lang.CharSequence)> (1)
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNameLookupQuery: java.lang.String query (java.lang.String)> (1)
<com.android.contacts.calllog.DefaultVoicemailNotifier$NameLookupQuery: java.lang.String query (java.lang.String)> (1)
<com.android.contacts.calllog.DefaultVoicemailNotifier: void updateNotification (android.net.Uri)> (2)
<com.android.contacts.calllog.CallLogNotificationsService: void onHandleIntent (android.content.Intent)> (1)
<com.android.contacts.calllog.VoicemailNotifier: void updateNotification (android.net.Uri)> ()
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: long queryForContactId (android.content.ContentResolver,long)> (1)
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadThumbnails (boolean)> (2)
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadPhotosInBackground ()> (1)
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query (android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> (3)
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryWithContactIdAndLookupKey (android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,android.os.CancellationSignal)> (2)
<com.android.mms.transaction.SmsReceiverService: int moveOutboxMessagesToFailedBox ()> (1)
<com.android.mms.transaction.SmsReceiverService: void handleBootCompleted ()> (1)
<com.android.mms.transaction.SmsReceiverService: void access$200 (com.android.mms.transaction.SmsReceiverService)> (1)
<com.android.inputmethod.latin.ContactsBinaryDictionary: int getContactCount ()> (3)
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: int getContactCount ()> (1)
<android.provider.Contacts$People: long tryGetMyContactsGroupId (android.content.ContentResolver)> (1)
<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage (android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)> (1)
<com.android.contacts.ContactsListActivity: android.net.Uri getContactUri (int)> ()
<com.android.contacts.ContactsListActivity: android.net.Uri getUriToQuery ()> ()
<com.android.contacts.ContactsListActivity: android.net.Uri getSelectedUri (int)> ()
